<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类： jekyll | 雁起平沙的网络日志]]></title>
  <link href="http://yanping.me/cn/blog/categories/jekyll/atom.xml" rel="self"/>
  <link href="http://yanping.me/cn/"/>
  <updated>2013-10-24T00:33:41+08:00</updated>
  <id>http://yanping.me/cn/</id>
  <author>
    <name><![CDATA[ypchen]]></name>
    <email><![CDATA[chen@yanping.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用js在jekyll博客中实现标签云和标签页]]></title>
    <link href="http://yanping.me/cn/blog/2013/02/13/generate-tags-with-js-in-jekyll-blog/"/>
    <updated>2013-02-13T15:30:00+08:00</updated>
    <id>http://yanping.me/cn/blog/2013/02/13/generate-tags-with-js-in-jekyll-blog</id>
    <content type="html"><![CDATA[<p class="info">本文主要讨论在jekyll博客中借助javascript和json，实现标签云和标签页。标签云可以用jquery.tagcloud.js插件实现，标签页则使用jQuery读取json数据文件，用地址传递参数给js函数，使用的是异步加载技术，请看<a href="http://art.yanping.me/tags/">演示页面</a>。</p>

<h2 id="section">标签云</h2>

<p>先做点准备工作，加载jquery。因为我的博客里还加载了其他的js库，在另外一个js库中也定义了$符号的话，那么我们在使用$符号时就发生了冲突。所以在加载jquery时还要解决$命名冲突。请看<a href="http://www.cnblogs.com/RascallySnake/archive/2010/05/07/1729417.html">这篇文章</a>，我用的办法是定义jQuery的别名：</p>

<p><code>html
&lt;script src="http://yanping.me/cn/js/jquery-1.7.1.min.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script type="text/javascript"&gt;
  var jq = jQuery.noConflict();
&lt;/script&gt;
</code></p>

<p>下面是标签云的代码：</p>

<p>```html
<script src="http://yanping.me/cn/js/jquery.tagcloud.js" type="text/javascript" charset="utf-8"></script>
<script language="javascript">
  jq.fn.tagcloud.defaults = {
    size: {
      start: 12,
      end: 22,
      unit: 'px'
    },
    color: {
      start: '#7CCD7C',
      end: '#CD0000'
    }
  };</script></p>

<p>jq(function() {
    jq(‘#tag_cloud a’).tagcloud();
  });
&lt;/script&gt;
```</p>

<h2 id="section-1">标签页</h2>

<p>最初，我是在谢益辉的博客里看到的<a href="http://yihui.name/cn/tags/">用js实现标签云</a>。可以看到，这个标签页上，在标签云之后跟着各个标签的文章列表，如果我只想看到某个标签的文章列表，要怎么做呢？</p>

<p>前面我写了篇文章<a href="/blog/2012/10/10/asynchronous-loading-post-list-with-jekyll-and-jQuery/">《用jekyll和jQuery实现异步加载文章列表》</a>，使用jQuery异步加载文章列表。同样的，我们也可以编写个函数加载某个标签的所有文章的列表。</p>

<!--more-->

<p>首先，生成文章列表数据的json模板是：</p>

<p>```
—
layout: nil
—</p>

<p>[
{% for post in site.posts %}
  {“title”:”{{post.title}}”, 
  “url”:”{{site.url}}{{post.url}}”, 
  “date”:”{{ post.date | date:’%Y-%m-%d’ }}”, 
  “tags”:[{% for tag in post.tags %}”{{tag}}”{% if forloop.last == false %} ,{% endif %}{% endfor %}]}
  {% if forloop.last == false %},{% endif %}{% endfor %}
]

```</p>

<p>用jekyll处理之后得到的json文件在<a href="http://art.yanping.me/post.json">这里</a>。</p>

<p>定义javascript函数showTag()，异步加载某一个标签的文章列表</p>

<p>```html
<script type="text/javascript">
  function showTag(tagStr) {
    jq.getJSON("../post.json",
    function(data) {
      jq('#show-tag').empty(content);
      var content = "&lt;h2&gt;分类：" + tagStr + "&lt;/h2&gt;&lt;ul class=\"posts\"&gt;";
      var count = 0;
      jq.each(data,
      function(i, item) {
        jq.each(item.tags,
        function(j, tag) {
          if (tag == tagStr) {
            content += "&lt;li class=\"listing-item\"&gt;&lt;time datetime=\"" + item.date + "\"&gt;" + item.date + "&lt;/time&gt;&lt;a href=\"" + item.url + "\"&gt;" + item.title + "&lt;/a&gt;&lt;/li&gt;";
            count++;
          }</script></p>

<pre><code>    });
  });
  if (count &gt; 0) {
    content += "&lt;/ul&gt;";
    postNumStr = "&lt;span&gt;（" + count + "篇文章）&lt;/span&gt;";
    jq('#show-tag').append(content);
    jq('#show-tag&gt;h2').append(postNumStr);
  }
});   } &lt;/script&gt; ```
</code></pre>

<p>而标签页的核心代码为</p>

<p>```
&lt;div id="tag_cloud"&gt;
  {% for tag in site.tags %}
  <a href="javascript:;" onclick="showTag('{{ tag[0] }}')" title="{{ tag[0] }}" rel="{{ tag[1].size }}">
    {{ tag[0] }}
  </a>
  {% endfor %}
  &lt;/div&gt;</p>

<div id="show-tag">
  <div style="text-align:center">
    <img src="http://yanping.me/cn/images/loading.gif" />&nbsp;&nbsp;loading...
  </div>
</div>
<p>
```</p>

<p>戳<a href="https://raw.github.com/yanping/art/gh-pages/tags/index.html">这里</a>查看完整代码。</p>

<p>下面这段代码用url地址来传递参数</p>

<p>```html
<script type="text/javascript">
  var href = window.location.href;
  var pos = href.indexOf('?tag=');
  var paraStr = href.substring(pos + 5);
  if (pos &gt; 0) {
    showTag(decodeURI(paraStr));
  } else {
    showTag("");
  }
</script></p>

<p>```</p>

<p>post模板里的标签列表部分代码：</p>

<p>```
{% if page.tags != empty %}
&lt;ul class="tags emphnext"&gt;</p>
<li>标签：</li>
<p>{% for tag in page.tags %}</p>
<li>
    <a href="{{ site.baseurl }}/tags/?tag={{tag | cgi}}">
      {{ tag }}
    </a>
    {% if forloop.last == false %}, {%endif %}
  </li>
<p>{% endfor %}
&lt;/ul&gt;
```</p>

<p>侧面栏上标签列表的代码：</p>

<p><code>
&lt;div id="tag_sidebar"&gt;
  {% for tag in site.tags %}
  &lt;a href="{{site.baseurl}}/tags/?tag={{tag[0] | cgi}}" title="{{ tag[0] }}"&gt;
    {{ tag[0] }}&lt;sup&gt;{{ tag[1].size }}&lt;/sup&gt;&amp;nbsp;
  &lt;/a&gt;
  {% endfor %}
&lt;/div&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用jekyll和jQuery实现异步加载文章列表]]></title>
    <link href="http://yanping.me/cn/blog/2012/10/10/asynchronous-loading-post-list-with-jekyll-and-jQuery/"/>
    <updated>2012-10-10T23:30:00+08:00</updated>
    <id>http://yanping.me/cn/blog/2012/10/10/asynchronous-loading-post-list-with-jekyll-and-jQuery</id>
    <content type="html"><![CDATA[<p class="info">本文主要讨论如何用基于jQuery的插件waypoint，实现异步加载jekyll模板生成的json文件，生成文章列表。</p>

<p>我在<a href="http://art.yanping.me/archives/">另一个博客的文章列表</a>里使用了异步加载的技术，不过直接看页面的html源代码是看不出来的。编译之前的代码在<a href="https://github.com/yanping/art/blob/gh-pages/archives/index.html">这里</a>。</p>

<p>首先，生成文章列表数据的json模板是：</p>

<p>```
—
layout: nil
—</p>

<p>[
{% for post in site.posts %}
  {“title”:”{{post.title}}”, 
  “url”:”{{site.url}}{{post.url}}”, 
  “date”:”{{ post.date | date:’%Y-%m-%d’ }}”, 
  “tags”:[{% for tag in post.tags %}”{{tag}}”{% if forloop.last == false %} ,{% endif %}{% endfor %}]}
  {% if forloop.last == false %},{% endif %}{% endfor %}
]
```</p>

<p>这在前面的<a href="http://chen.yanping.me/cn/blog/2012/04/19/jekyll-with-json/">文章</a>里提到过。</p>

<p>头部YAML数据部分：</p>

<h2 id="yaml">```yaml</h2>
<p>layout: default
title: 全部文章
initItem: 50
perPageItem: 100
—
```</p>

<p><code>initItem</code>是初始加载时显示的文章主题数，<code>perPageItem</code>是每次页面下拉到底部时读取json数据并新生成的文章主题数。</p>

<p>初始加载网页时，文章主题列表是静态的html，由jekyll生成：</p>

<p><code>html
&lt;ul class="posts"&gt;
{% for post in site.posts limit:page.initItem %}
  &lt;li class="listing-item"&gt;
    &lt;time datetime="{{ post.date | date:"%Y-%m-%d" }}"&gt;{{ post.date | date:"%Y-%m-%d" }}&lt;/time&gt;
    &lt;a href="{{site.baseurl}}{{ post.url }}" title="{{ post.title }}"&gt;{{ post.title }}&lt;/a&gt;
  &lt;/li&gt;{% endfor %}
&lt;/ul&gt;
</code></p>

<p>上面的<code>limit:page.initItem</code>限定了列表的项数不超过<code>initItem</code>。当向下拉页面，waypoint会捕捉到页面下拉到底部的事件，并调用<em>getJSON</em>方法来读取json数据，形成文章列表。</p>

<!--more-->

<p>```html
{% if site.posts.size &gt; page.initItem %}
<script src="http://yanping.me/cn/js/jquery-1.7.1.min.js" type="text/javascript" charset="utf-8"></script>
<script src="http://yanping.me/cn/js/waypoints.min.js" type="text/javascript"></script>
<script type="text/javascript">
  $(document).ready(function() {
    // 关于waypoint，请看 http://imakewebthings.com/jquery-waypoints/
    var $loading = $("&lt;div class='loading' style='text-align:center'&gt;<img src="http://yanping.me/cn/images/loading.gif" />&lt;/div&gt;"),
    $footer = $('footer'),
    opts = {
      offset: '100%'
    };</script></p>

<pre><code>var count = {{ page.initItem }}; // 初始文章数
var count_sup = 0; // 循环上界，初始为0
$footer.waypoint(function(event, direction) {
  $footer.waypoint('remove');
  $('.posts').append($loading);
  $.getJSON("../post.json", function(data) {
    var content = "";
    count_sup = count + {{ page.perPageItem }}; // 循环上界每次增加page.perPageItem项
    var delta = 0; // 局部计数器
    $.each(data, function(i, item) {
      if (i &gt;= count &amp; i &lt; count_sup) {
        content += "&lt;li class='listing-item'&gt;&lt;time datetime='" + item.date + "'&gt;" + item.date + "&lt;/time&gt;";
        content += "&lt;a href='" + item.url + "' title='" + item.title + "'&gt;" + item.title + "&lt;/a&gt;&lt;/li&gt;";
        delta++;
      }
    });
    count += delta;
    $('div.loading').remove();
    $(".posts").append(content);
    if (count &lt; data.length) $footer.waypoint(opts);
  });
}, opts);   }); &lt;/script&gt; {% endif %} ```
</code></pre>

<p>关于这段代码，要注意以下几点：</p>

<ol>
  <li>上面的代码一开始有个判断语句，当文章数不大于<code>initItem</code>时，后面的js代码不会进入最终生成的html中。</li>
  <li>充分利用Liquid模板的特性，在js代码中，也引用了Liquid模板数据<code>{{ page.initItem }}</code>和<code>{{ page.perPageItem }}</code></li>
  <li><code>.getJSON()</code>读取数据形成列表之后，语句</li>
</ol>

<p><code>
 if (count &lt; data.length) $footer.waypoint(opts);
</code></p>

<p>是要判断已经加载的文章主题数是否到达总数，如果比总数小，就会在新的底部<code>$footer</code>上注册为<em>waypoint</em>，然后再向下拉页面，到达底部还会触发事件，然后接着读取数据，直到数据已经读取完毕。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Windows下使用jekyll如何避免出现中文字符集错误]]></title>
    <link href="http://yanping.me/cn/blog/2012/10/09/chinese-charset-problems-with-jekyll/"/>
    <updated>2012-10-09T21:30:00+08:00</updated>
    <id>http://yanping.me/cn/blog/2012/10/09/chinese-charset-problems-with-jekyll</id>
    <content type="html"><![CDATA[<p class="info">在windows下使用jekyll时经常会遇到字符集错误，比如遇到提示<span style="font-family: Menlo,Monaco,'Andale Mono','lucida console','Courier New',monospace;">Liquid error: incompatible character encodings: UTF-8 and GBK</span>。本文将介绍几种解决方案。</p>

<p>1. <strong>修改bash的字符集：</strong>在<code>C:\Documents and Settings\用户名</code>下，找到文件<code>.bash_profile</code>，后面加两行</p>

<p><code>sh
set LC_ALL=en_US.UTF-8
set LANG=en_US.UTF-8
</code></p>

<!--more-->

<p>2. <strong>所有文档使用utf-8无BOM格式</strong></p>

<p>在Windows下新建的文本文件默认是ANSI格式的，而jekyll只认utf-8。如果遇到ANSI格式编码的文件，可以在notepad++中转换，如下图：</p>

<p><img src="http://f-1.tuzhan.com/31767262cd80/p-1/l/2012/10/09/16/bc35a142ea064af69246d43d794d11bd.png" alt="转换为utf-8编码" /></p>

<p>3. <strong>使用Unix换行符</strong></p>

<p>可以在notepad++中转换，如下图：</p>

<p><img src="http://t-1.tuzhan.com/c6de0d29ca03/p-1/l/2012/10/09/16/73050c832188493ba1d6cbbb4757211c.png" alt="转换为Unix换行符" /></p>

<p>这里有个技巧，在notepad++中，可以开启“显示所有字符”选项，这样就可以看出文档用的是Windows的换行符还是Unix的换行符。</p>

<p><img src="http://f-1.tuzhan.com/63479110599f/p-1/l/2012/10/09/16/6a12be56f7374c608d732f090a1a49bd.png" alt="显示所有字符" /></p>

<p>在这种模式下，Windows的换行符显示的是<code>CR</code>，Unix的换行符显示的是<code>LF</code></p>

<p>4. <strong>新建文档的时候就注意到前两条</strong></p>

<p>在<strong>设置–&gt;首选项</strong>里，如下设置
<img src="http://f-1.tuzhan.com/fb1e112d285c/p-1/l/2012/10/09/21/6c80da6e228343998fa184a3983c403a.png" alt="新建文档设置" /></p>

<p>5. <strong>注意YAML头部的格式</strong></p>

<p>模板文件的元数据以YAML的格式展现，YAML头部经常会出现三个问题：（1）三短线前面不能有空格；（2）“名: 值”对里冒号后面要有空格；（3）回车后不要有Tab符；（4）表示数组成员开始的<code>-</code>号后面要有空格</p>

<p>在notepad++中开启“显示所有字符”选项后，就可以看清空格和Tab符了，下图是很规范的例子
<img src="http://f-1.tuzhan.com/5a62f0e1e6c7/p-1/l/2012/10/09/16/1395a21769e24594a7783da6a8310d17.png" alt="yaml头部" /></p>

<p>尤其是Tab符，不借助工具很难跟空格区分，下图那个向右箭头的符号就是Tab符，这是个错误的例子，应该把Tab符删除，改为用空格缩进</p>

<p><img src="http://f-1.tuzhan.com/104be2300ea4/p-1/l/2012/10/09/16/5a42fd3a016741388044954d4e9c0925.png" alt="带Tab符的YAML头部" /></p>

<p>正确的应该是这样，<code>-</code>号后面都有空格</p>

<p><img src="http://f-1.tuzhan.com/8df6d607c9f0/p-1/l/2012/10/09/16/4769b025fb8b4d129d3755cf84746ad1.png" alt="不带Tab符的YAML头部" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用jekyll生成包含json变量的js脚本]]></title>
    <link href="http://yanping.me/cn/blog/2012/04/20/jekyll-with-js-and-json/"/>
    <updated>2012-04-20T23:58:00+08:00</updated>
    <id>http://yanping.me/cn/blog/2012/04/20/jekyll-with-js-and-json</id>
    <content type="html"><![CDATA[<p class="info">本文主要讨论如何用jekyll模板生成含有json数据的javascript脚本，并以此解决跨域读取json数据的问题。</p>

<p><a href="http://yanping.me/cn/blog/2012/04/19/jekyll-with-json/">前一篇文章</a>提到用getJSON读取json文件，并以此动态更新页面，但只能读取同域的json文件，据说是出于安全性的考虑。</p>

<p>现在问题出来了，我除了前文提到的三个网站以外，还有个<a href="http://inwake.com/ypchen">主页的镜像网站</a>，它存放在美国的一位师兄的服务器上，和那三个网站肯定不同域，如果我要让它和github上的<a href="http://yanping.me">主页</a>始终保持一致，又不想每次手动修改博客文章列表，也不能再使用feedsky了。因为feedsky除了慢之外，生成的列表样式也和网站风格不一致。</p>

<!--more-->

<p>别看表面上只有一行代码：</p>

<p><code>html
&lt;script src="http://feed.feedsky.com/yanping/jsout&amp;n=5&amp;e=utf8" type="text/javascript"&gt;&lt;/script&gt;	
</code></p>

<p>实际上经过了向feedsky服务器发送请求、返回数据、浏览器渲染之后的代码很臃肿，用firefox的插件firebug查看上面那行代码渲染之后的代码是如下行形式（只是个例子，等这篇文章发布以后feedsky提供的内容会改变）：</p>

<p><code>html
&lt;!-- Feedsky FEED JS发布代码开始 --&gt;
    &lt;script src="http://feed.feedsky.com/yanping/jsout&amp;amp;n=5&amp;amp;e=utf8"&gt;
    &lt;/script&gt;
    &lt;div class="reader-publisher-module" id="readerpublishermodule0" style="border: 1px solid rgb(188, 204, 235); margin: 0.5em; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; font-family: arial,sans-serif; font-size: 10pt; -moz-border-radius-topleft: 8px; -moz-border-radius-topright: 8px; -moz-border-radius-bottomright: 8px; -moz-border-radius-bottomleft: 8px;"&gt;
        &lt;h3 style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(188, 204, 235); border-width: medium medium 1px; margin: 0pt 0.5em; padding: 0.2em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; -moz-border-radius-topleft: 8px; -moz-border-radius-topright: 8px; -moz-border-radius-bottomright: 0pt; -moz-border-radius-bottomleft: 0pt; color: rgb(9, 9, 146);"&gt;
            &lt;a href="http://chen.yanping.me/cn/"&gt;
                雁起平沙的网络日志
            &lt;/a&gt;
        &lt;/h3&gt;
        &lt;ul style="border: medium none ; margin: 0pt 0.5em; padding: 0.2em; background: transparent none repeat scroll 0%; overflow: hidden; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal;"&gt;
            &lt;li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"&gt;
                &lt;a href="http://item.feedsky.com/~feedsky/yanping/~8847833/629496870/6966477/1/item.html"
                title="Thu, 19 Apr 2012 22:30:00 +0800:用jekyll生成json" class="i" style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(122, 126, 224); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(16, 16, 200);"&gt;
                    用jekyll生成json
                &lt;/a&gt;
            &lt;/li&gt;
            &lt;li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"&gt;
                &lt;a href="http://item.feedsky.com/~feedsky/yanping/~8847833/629496871/6966477/1/item.html"
                title="Fri, 30 Mar 2012 19:50:00 +0800:指数方法论入门" class="i" style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(122, 126, 224); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(16, 16, 200);"&gt;
                    指数方法论入门
                &lt;/a&gt;
            &lt;/li&gt;
            &lt;li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"&gt;
                &lt;a href="http://item.feedsky.com/~feedsky/yanping/~8847833/629496872/6966477/1/item.html"
                title="Sun, 18 Mar 2012 00:30:00 +0800:Github Pages极简教程" class="i" style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(122, 126, 224); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(16, 16, 200);"&gt;
                    Github Pages极简教程
                &lt;/a&gt;
            &lt;/li&gt;
            &lt;li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"&gt;
                &lt;a href="http://item.feedsky.com/~feedsky/yanping/~8847833/629496873/6966477/1/item.html"
                title="Tue, 13 Mar 2012 00:30:00 +0800:黑魔法利器pandoc" class="i" style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(122, 126, 224); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(16, 16, 200);"&gt;
                    黑魔法利器pandoc
                &lt;/a&gt;
            &lt;/li&gt;
            &lt;li style="border: medium none ; margin: 0pt; padding: 0.4em 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; list-style-type: none;"&gt;
                &lt;a href="http://item.feedsky.com/~feedsky/yanping/~8847833/629496874/6966477/1/item.html"
                title="Mon, 12 Mar 2012 22:16:00 +0800:我的Octopress样式表" class="i" style="border-style: none none solid; border-color: -moz-use-text-color -moz-use-text-color rgb(122, 126, 224); border-width: medium medium 1px; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: none; font-weight: normal; color: rgb(16, 16, 200);"&gt;
                    我的Octopress样式表
                &lt;/a&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
        &lt;div class="f" style="border-style: solid none none; border-color: rgb(188, 204, 235) -moz-use-text-color -moz-use-text-color; border-width: 1px medium medium; margin: 0pt; padding: 0.2em 8px; background: rgb(229, 236, 249) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: right; text-indent: 0pt; text-decoration: none; font-weight: normal; -moz-border-radius-topleft: 0pt; -moz-border-radius-topright: 0pt; -moz-border-radius-bottomright: 4px; -moz-border-radius-bottomleft: 4px; font-size: small; white-space: nowrap;"&gt;
            &lt;a style="border: medium none ; margin: 0pt; padding: 0pt; background: transparent none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; text-align: left; text-indent: 0pt; text-decoration: underline; font-weight: normal; color: rgb(137, 141, 233);"
            href="http://feed.yanping.me"&gt;
                Read in Feedsky
            &lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- Feedsky FEED JS发布代码结束 --&gt;
</code></p>

<p>虽然不好跨域读取json数据文件，但是浏览器可以加载外部js脚本，js脚本里又可以包含json变量。</p>

<p>我们称提供json数据的一端为服务端，调用json数据的一端为客户端。在服务端创建下面的js脚本模板：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>recent.json  (posts.js)</span> <a href='/downloads/code/../../posts.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">---</span>
</span><span class='line'><span class="nx">layout</span><span class="o">:</span> <span class="nx">nil</span>
</span><span class='line'><span class="o">---</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">post</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;list&quot;</span><span class="o">:</span> <span class="p">[{</span><span class="o">%</span> <span class="k">for</span> <span class="nx">post</span> <span class="k">in</span> <span class="nx">site</span><span class="p">.</span><span class="nx">posts</span> <span class="nx">limit</span><span class="o">:</span> <span class="mi">5</span> <span class="o">%</span><span class="p">}</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;{{post.title}}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;{{site.url}}{{post.url}}&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;{{post.date|date_to_string}}&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="nx">forloop</span><span class="p">.</span><span class="nx">last</span> <span class="o">==</span> <span class="kc">false</span> <span class="o">%</span><span class="p">},{</span><span class="o">%</span> <span class="nx">endif</span> <span class="o">%</span><span class="p">}</span> <span class="p">{</span><span class="o">%</span> <span class="nx">endfor</span> <span class="o">%</span><span class="p">}]</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">content</span> <span class="o">=</span> <span class="s2">&quot;&lt;ul class=\&quot;compact recent\&quot;&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">post</span><span class="p">.</span><span class="nx">list</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">content</span> <span class="o">+=</span> <span class="s2">&quot;&lt;li&gt;&lt;span class=\&quot;date\&quot;&gt;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">date</span> <span class="o">+</span> <span class="s2">&quot;&lt;/span&gt;&lt;a href=\&quot;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">url</span> <span class="o">+</span> <span class="s2">&quot;\&quot;&gt;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">title</span> <span class="o">+</span> <span class="s2">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">content</span> <span class="o">+=</span> <span class="s2">&quot;&lt;/ul&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#blog1-posts-list .loading&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#blog1-posts-list&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">content</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>经过jekyll的处理后得到：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>recent.json  (posts.js)</span> <a href='/downloads/code/../../../public/cn/posts.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">post</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;list&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;关于Github Pages 视频教程&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://yanping.me/cn/blog/2013/08/12/about-github-pages-step-by-step-video/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;12 Aug 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">,</span>  <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;Github Pages 视频教程（1）&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://yanping.me/cn/blog/2013/08/11/github-pages-step-by-step-video/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;11 Aug 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">,</span>  <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;【广告】上海北京两地的R语言培训&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://yanping.me/cn/blog/2013/06/30/xccds-r-training/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;30 Jun 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">,</span>  <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;【译文】软件工程师如何修炼数据科学&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://yanping.me/cn/blog/2013/05/25/software-engineers-guide-to-getting/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;25 May 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span> <span class="p">,</span>  <span class="p">{</span>
</span><span class='line'>      <span class="s2">&quot;title&quot;</span><span class="o">:</span> <span class="s2">&quot;《R语言编程艺术》即将上市&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://yanping.me/cn/blog/2013/05/15/the-art-of-r-programming-published/&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;date&quot;</span><span class="o">:</span> <span class="s2">&quot;15 May 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span>  <span class="p">]</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">content</span> <span class="o">=</span> <span class="s2">&quot;&lt;ul class=\&quot;compact recent\&quot;&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">post</span><span class="p">.</span><span class="nx">list</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span> <span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">content</span> <span class="o">+=</span> <span class="s2">&quot;&lt;li&gt;&lt;span class=\&quot;date\&quot;&gt;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">date</span> <span class="o">+</span> <span class="s2">&quot;&lt;/span&gt;&lt;a href=\&quot;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">url</span> <span class="o">+</span> <span class="s2">&quot;\&quot;&gt;&quot;</span> <span class="o">+</span> <span class="nx">item</span><span class="p">.</span><span class="nx">title</span> <span class="o">+</span> <span class="s2">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">content</span> <span class="o">+=</span> <span class="s2">&quot;&lt;/ul&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#blog1-posts-list .loading&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#blog1-posts-list&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">content</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>客户端页面里是这样调用的：</p>

<p>```html
	&lt;div class="section" id="blog1-posts-list"&gt;
		&lt;h1 id="id165"&gt;博客&lt;/h1&gt;
		&lt;p&gt;我现在主要更新的是托管在github上的<a href="http://chen.yanping.me/cn" target="_blank">Octopress博客</a>，主要记录自己在学习过程中的心得体会。近期内容：&lt;/p&gt;
	&lt;/div&gt;</p>

<pre><code>&lt;script src="http://chen.yanping.me/cn/posts.js" type="text/javascript"&gt;&lt;/script&gt; ```
</code></pre>

<p>读者可以自行比较<a href="http://inwake.com/ypchen">http://inwake.com/ypchen</a>和<a href="http://inwake.com/ypchen/json-demo">http://inwake.com/ypchen/json-demo</a>的差别。</p>

<h2 id="section">第二种方法</h2>

<p>上面讲的这种调用方式还是不够灵活，客户端不但提供数据，还限定了使用数据的方法，如果两端你都能操作那一点问题没有，但经常两端分属不同的人维护，你也没权力指挥别人做什么。有没有更好的办法呢？答案是肯定的。只要把数据格式的定义和调用数据的函数定义分开就行。</p>

<p>服务端只定义json数据的形式，例如在博客<a href="https://github.com/yanping/art">https://github.com/yanping/art</a>新建posts2.js的模板：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>—
</span><span class='line'>layout: nil
</span><span class='line'>—&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>var post = {
</span><span class='line'>"list":[{% for post in site.posts limit:5 %}{
</span><span class='line'>    "title":"{{post.title}}",
</span><span class='line'>    "url":"{{site.url}}{{post.url}}",
</span><span class='line'>    "date":"{{post.date|date_to_string}}"
</span><span class='line'>}{% if forloop.last == false %},{% endif %}
</span><span class='line'>{% endfor %}
</span><span class='line'>
</span><span class='line'>]};	
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在客户端页面这样调用：</p>

<p>```html
&lt;div class="section" id="blog2-posts-list"&gt;</p>
<p>我还有个文艺点儿的<a href="http://art.yanping.me" target="_blank">博客</a>，写写跟技术无关的东西。近期内容：</p>
<p>&lt;/div&gt;</p>

<script src="http://art.yanping.me/posts2.js" type="text/javascript"></script>

<!-- 下面定义数据调用方法 -->
<script type="text/javascript">
  $(document).ready(function() {
    var content ="<ul class=\"compact recent\">";
      $.each(post.list,function(i,item){
        content += "<li><span class=\"date\">"+ item.date + "</span><a href=\""+item.url+"\">"+ item.title +"</a></li>";
     });

  content +="</ul>";
  $("#blog2-posts-list").append(content);		
 });		
</script>

<p>```</p>

<p>我尝试了几种json数据的定义形式，<a href="http://inwake.com/ypchen/json-demo/2.html">示例1</a>、<a href="http://inwake.com/ypchen/json-demo/3.html">示例2</a>、<a href="http://inwake.com/ypchen/json-demo/4.html">示例3</a>和<a href="http://inwake.com/ypchen/json-demo/5.html">示例4</a>，只有最后一种没有办法完成调用，这是因为数据的读取和使用分别在两个<code>&lt;script&gt;</code>标签里，数据必须定义成全局变量才能在后面被引用。</p>

<h2 id="section-1">进一步思考</h2>

<p>在同域的情况下，服务端生成json数据，在客户端用getJSON读取json文件，我们称之为<strong>方法一</strong>，这是<a href="http://yanping.me/cn/blog/2012/04/19/jekyll-with-json/">前一篇文章</a>讲的方法;在跨域的情况下，服务端生成包含json变量的js脚本，然后再在客户端链接这个外部的js脚本，这种方法我们称之为<strong>方法二</strong>。</p>

<p>本文在使用<strong>方法二</strong>时，如果服务端和客户端分别由两个人维护的话，客户端的维护者只能被动接受。幸好我们有github，github的口号是social coding，有人翻译成社会化编程，我偏向于翻译成社交编程。想想我们在facebook、人人网这样的社交网络都干些什么，我们在那上面上发布状态、上传图片，告诉朋友以及路过的陌生人我们都做了什么、心情如何、拍了什么照片，上班时大家很喜欢挂人人，刷新鲜事；而在github上，coder们晒出自己的代码，可以关注别的coder和感兴趣的项目，登录github可以看到大家的“新鲜事”：某某创建了个什么代码库、做了什么修改，你可以亲眼看到别人的项目从最初的雏形发展成一个完美的项目，可以给别人的代码留言，报告bug，也可以fork别人的代码，根据自己的喜好做修改，如果有好的主意，可以给原作者发个pull request，作者要是也同样喜欢，就会加到自己的代码里。</p>

<p>在github上，跨域的问题不是那么难解决，我们完全可以针对自己的需求写个js脚本的模板，给博客的作者发个pull request，或者留言，没准儿哪天包含json变量的js脚本模板也会像rss.xml、atom.xml或者sitemap.xml一样变得成github博客的标配。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用jekyll生成json]]></title>
    <link href="http://yanping.me/cn/blog/2012/04/19/jekyll-with-json/"/>
    <updated>2012-04-19T22:30:00+08:00</updated>
    <id>http://yanping.me/cn/blog/2012/04/19/jekyll-with-json</id>
    <content type="html"><![CDATA[<p class="info">本文主要讨论如何用jekyll模板生成json，并以此整合在github上托管的不同网站的数据。</p>

<p>从去年年底接触github和jekyll到现在已经折腾五个月了，从最初用github托管纯静态网站，到现在依照别人的网站构架修改成自己喜欢的样子，这个过程也是个不断学习的过程。</p>

<p>我在github上有三个网站，一个是<a href="http://yanping.me">主页</a>，一个<a href="http://yanping.me/cn">技术博客</a>，最后一个是<a href="http://art.yanping.me">文艺博客</a>。现在有个问题是，这三个网站对应的是github上三个不同的代码库，如果我要在<a href="http://yanping.me">主页</a>上列出另两个网站的文章列表，不能用jekyll提供的函数来做到，jekyll只能操作一个代码库的文本，不能跨代码库。我之前用的一个方法是用feedsky提供的发布脚本，效果请看<a href="http://inwake.com/ypchen/json-demo">http://inwake.com/ypchen/json-demo</a>。这样的缺点是很显然的，一是加载速度慢，二是我们没办法控制列表的格式和样式。有没有更直接的解决方法呢？</p>

<!--more-->

<p>我看到在很多jekyll的博客里，都能自动生成rss.xml和atom.xml，其实说白了，只要是本文文件，jekyll都能用模板操作。后来我听说了json，听说可以用jquery调用json，既然jekyll可以操作本文，那么可不可以用jekyll来生成我们规定格式的json文件呢？例如在<a href="http://yanping.me/cn">技术博客</a>和<a href="http://art.yanping.me">文艺博客</a>各生成一个包含文章信息的json文件，再用jquery或ajax来调用。这里面涉及到一个是否跨域的问题，一开始我只能确定<a href="http://yanping.me">主页</a>和<a href="http://yanping.me/cn">技术博客</a>是同域的，可我忘了<a href="http://art.yanping.me">文艺博客</a>的真正地址是<a href="http://yanping.github.com/art">http://yanping.github.com/art</a>，或者说是<a href="http://chen.yanping.me/art">http://chen.yanping.me/art</a>，<a href="http://art.yanping.me/">http://art.yanping.me/</a>只不过是我后来给它绑定的域名，还特定用了javascript来限定了只能用这个域名访问，因为用前两个地址访问都显示不正常（关于这点，请看<a href="http://chen.yanping.me/cn/blog/2012/02/06/github-pages-domain-3/">这里</a>）。所以说，只要是在同一个github账户下建立的网站，它们就是同域的。</p>

<h2 id="json">生成json</h2>

<p>例如我在网站代码库里建立这样的json文件模板：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>recent.json  (recent.json)</span> <a href='/downloads/code/../../recent.json'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">---</span>
</span><span class='line'><span class="nx">layout</span><span class="o">:</span> <span class="nx">nil</span>
</span><span class='line'><span class="o">---</span>
</span><span class='line'>
</span><span class='line'><span class="p">[{</span><span class="o">%</span> <span class="k">for</span> <span class="nx">post</span> <span class="k">in</span> <span class="nx">site</span><span class="p">.</span><span class="nx">posts</span> <span class="nx">limit</span><span class="o">:</span><span class="mi">5</span> <span class="o">%</span><span class="p">}</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;{{post.title}}&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;{{site.url}}{{post.url}}&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;{{post.date|date_to_string}}&quot;</span>
</span><span class='line'>    <span class="p">}{</span><span class="o">%</span> <span class="k">if</span> <span class="nx">forloop</span><span class="p">.</span><span class="nx">last</span> <span class="o">==</span> <span class="kc">false</span> <span class="o">%</span><span class="p">},{</span><span class="o">%</span> <span class="nx">endif</span> <span class="o">%</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="nx">endfor</span> <span class="o">%</span><span class="p">}</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在使用原生的jekyll时没有问题，但是在使用octopress时就出现了<a href="http://ruby-taiwan.org/topics/230">问题</a>：octopress自动把英文的双引号"变成了<code>&amp;#8220;</code>和<code>&amp;#8221;</code>，经过浏览器的解释对应的是“和”。有人提出在双引号前加<code>\</code>，在网页里的确是显示的原来的引号，但是一看代码，还是字符引用。</p>

<p>昨晚想了很久，网上找资料也没找到，没办法，只好去看octopress里的代码。我可是ruby小白啊，一点都不懂，连猜带蒙终于搞定了。其实最简单粗暴的办法就是把octopress目录下<code>/plugins/octopress_filters.rb</code>里的第19行行首加<code>#</code>注释掉：</p>

<p><code>ruby
	#		RubyPants.new(input).to_html
</code></p>

<p>RubyPants这个插件就是替换引号的元凶，你可以打开它卡看看里面的注释。</p>

<p>经过上面的处理后，octopress也可以正常输出json文件了，请看</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>recent.json  (recent.json)</span> <a href='/downloads/code/../../../public/cn/recent.json'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;关于Github Pages 视频教程&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;http://yanping.me/cn/blog/2013/08/12/about-github-pages-step-by-step-video/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;12 Aug 2013&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;Github Pages 视频教程（1）&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;http://yanping.me/cn/blog/2013/08/11/github-pages-step-by-step-video/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;11 Aug 2013&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;【广告】上海北京两地的R语言培训&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;http://yanping.me/cn/blog/2013/06/30/xccds-r-training/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;30 Jun 2013&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;【译文】软件工程师如何修炼数据科学&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;http://yanping.me/cn/blog/2013/05/25/software-engineers-guide-to-getting/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;25 May 2013&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;title&quot;</span><span class="o">:</span><span class="s2">&quot;《R语言编程艺术》即将上市&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;url&quot;</span><span class="o">:</span><span class="s2">&quot;http://yanping.me/cn/blog/2013/05/15/the-art-of-r-programming-published/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;date&quot;</span><span class="o">:</span><span class="s2">&quot;15 May 2013&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2 id="json-1">调用json</h2>

<p>可以用ajax或jquery来调用json文件，后者更容易一些，这里给出一个例子，效果见我的<a href="http://yanping.me">主页</a></p>

<p>```html
&lt;div class="section" id="blog1-posts-list"&gt;
  &lt;h1 id="id165"&gt;博客&lt;/h1&gt;</p>
<p>
    我现在主要更新的是托管在github上的
    <a href="http://chen.yanping.me/cn" target="_blank">Octopress博客</a>
    ，主要记录自己在学习过程中的心得体会。近期内容：
  </p>
<p>&lt;/div&gt;
<script type="text/javascript">
  $(document).ready(function() {
    $.getJSON("/cn/recent.json",
    function(data) {
      var content = "&lt;ul class=\"compact recent\"&gt;";
      $.each(data,
      function(i, item) {</script></p>

<pre><code>    content += "&lt;li&gt;&lt;span class=\"date\"&gt;" + item.date + "&lt;/span&gt;&lt;a href=\"" + item.url + "\"&gt;" + item.title + "&lt;/a&gt;&lt;/li&gt;";

  });

  content += "&lt;/ul&gt;";
  $("#blog1-posts-list").append(content);
});   }); &lt;/script&gt; ```
</code></pre>

<p>别忘了加载jquery脚本，在我主页里是这句：</p>

<p><code>html
&lt;script src="http://yanping.me/cn/files/js/jquery-1.7.1.min.js" type="text/javascript"&gt;&lt;/script&gt; 
</code></p>

]]></content>
  </entry>
  
</feed>
