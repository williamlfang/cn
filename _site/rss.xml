<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>方莲 | William</title>
        <description>方莲 | William - william</description>
        <link>http://williamlfang.github.com/cn</link>
        <lastBuildDate>2015-05-19 15:30:34 +0800</lastBuildDate>
        <pubDate>2015-05-19 15:30:34 +0800</pubDate>
        <ttl>60</ttl>
　     　<copyright>版权所有</copyright>
　　     <language>zh-cn</language>
　     　<generator>nju.pt</generator>


        <item>
                <title>倾诉从结束到开始</title>
                <description>&lt;p&gt;其实我以前对每一篇日志都有制作标签的习惯，这样方便日后查找方便。一个标签就如同贴在前面的门牌，让远走的游子方能找到后家的方向。可是，说真的，当我此刻在终端输入命令打开编辑器的时候，竟然不知道该往 &lt;code&gt;tags&lt;/code&gt; 里面添加什么词语。是高兴的，可以值得欢呼雀跃的？还是忧伤的，独自躲在角落落寞的？抑或是平静的，日子如镜面恰似死水一潭？&lt;/p&gt;

&lt;p&gt;这次的诺贝尔生理学奖颁发给了几位因为研究人脑神经系统的科学家，据新闻报道，他们似乎发现人的大脑原来早已「内置」了地位系统（俗称&lt;code&gt;GPS&lt;/code&gt;）。纵然是掉队的飞鸟，也能找到大部队；可是啊，生命的个体，有时却或无奈或无辜或无聊或无畏的离开他所在的群落。集群生活是一种热闹，孤独有时却也是另一种美丽。如果科学真的发现人的神经系统可以做出基于地理信息的决策，那么一些人借着向心力逐渐向圆心靠拢，逐步走向权利的顶层，而这热闹甚至喧嚣的尘世，也存在着部分不受羁绊的个体，终日终身远离那个曾经痛爱的社群。这，或许是个体理性抉择的最有均衡点。&lt;/p&gt;

&lt;p&gt;找不到标签的我，是否也已失去原先内置的 &lt;code&gt;GPS&lt;/code&gt; 了呢？此刻，却也不知使用什么样的标签，来定位我所处于的地理，来定位我说处于的角色。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;倾诉是一场互动的沟通，如同棋逢高手，高山流水，我们总是希望在浩淼尘世找到那个可以倾诉的对象。或许是你的父母，他们始终站在身后准备随时触手可及的宽慰；或许是你的对象，她一直陪伴在你的身边，不曾离去；或许是你的挚友，他们懂你的小情绪，理解你的不开心，有时也冲着你发火，可是你知道他们一直可以依靠。可是，是否想过，深藏在内心的自我，那个曾经是个孩子未来也不会长大的自我。我们有太多的话语，总是自言自语；我们有太多的委屈，想要找个角落躲起来独自舔着伤口。一次酣畅淋漓的倾诉，是从自我开始，也是从自我结束。&lt;/p&gt;

&lt;p&gt;也许你对外界关闭了那个可以找到你的大脑版&lt;code&gt;GPS&lt;/code&gt;，可是你始终关不掉的是深藏内心的自我。&lt;/p&gt;

&lt;p&gt;W 在离去对我的打击倍感疼痛。或许一开始我只当做这原来只是一场玩笑，好好的一个人，却真的说走就走，不再相见。天边的云朵，在西边落幕，总是能在东方的晨曦找到些许的印记。可是这样的一个人，我却真的找不到了。或许当时我不敢失声痛哭，我怕躲在眼泪的雨幕背后是血淋淋的事实。所以把所有的&lt;code&gt;GPS&lt;/code&gt;关闭了，安安静静的躲在一个无人的角落，以为这样便听不到所有的不幸，那些的伤悲。这样的经历曾经让我备受折磨，依稀多年不再，如今却如恶水潮涌，冰冷似刀。&lt;/p&gt;

&lt;p&gt;我躲在被风伤害的角落，安静而无语的对着自己倾诉。关于 W 君，关于似水流年。这一次的倾诉没有开始，我也不知道它何时结束。&lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/10/10/qing-su-cong-jie-shu-dao-kai-shi/</link>
                <guid>http://williamlfang.github.com/cn/2014/10/10/qing-su-cong-jie-shu-dao-kai-shi/</guid>
                <pubDate>2014-10-10 00:00:00 +0800</pubDate>
                <category></category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>码农的假期</title>
                <description>&lt;h2 id=&quot;section&quot;&gt;又一个「劫日」&lt;/h2&gt;
&lt;p&gt;我历来对假期没有特别的概念。以前读书的时候，基本上是天天在图书馆泡着，要么是在发呆要么是在准备发呆的状态中。一方面是自己的借口，不大好动，喜欢宅，也不怎么喜欢出去游山玩水之类的，毕竟读书时候生活费总共就没几个子；另一方面，总是感觉有许多的东西要在假期这段时间好好弥补一下，刚好趁着假期有充分完整的时间可以利用。总而言之，以前自己特么像个书呆子。所以至今开始工作后，我也没觉得假期是多么一个「神圣不可剥夺」的权利。&lt;/p&gt;

&lt;p&gt;家里老婆和孩子去顺德母校参加活动，家里只有留自己一个人在耗着。一边感慨厦门一到假期就人满为患，先前读书的时候也是因为假期学校被游客「占领」，食堂没个吃饭的位，溜圈没个歇脚的地，甚至有一段时间厦大的图书馆都开始警报说「有一大波僵尸在靠近」。印象中我曾经固执的认为假期就如同我的死期似的，整个人没法子活了。所以老婆一说我可以趁这个时间出去走走的想法时，我连忙表示「誓死反对」。也罢，以前读书时候留下的老毛病，那也就重拾书本，开始书呆子的「宅期」了。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;section-1&quot;&gt;码农在行动&lt;/h2&gt;
&lt;p&gt;突然想起放假前有同事给我下了个命令，要用 R 来写一个小小的程序，帮其减少体力活。我本来想说的是，我又不是个专业码农，干嘛有事没事非得都往这边推呢。不过，至少是半个码农的我，平日里最看不得那些愚蠢的、浪费大量时间和精力去做一个重复的体力活了。比如我这个同事，她需要每天统计部门推荐的股票，然后在收盘时间登记相应的收盘信息，计算每支股票的收益情况，并最终汇总。其实我一开始看到这个「又脏又累」的苦逼活时，表示了强烈的鄙视感与完全没有和谐美的道义谴责。这些活一来是高度重复、机械的，没有必要每天花那么多的时间去重复消耗时间；二来，其实可以在事前先花一点时间好好设计一套程序，让代码自动运行给给出想要的结果，而且还能保证不出差错（她每天都担心是不是计算结果有误，结果在 Excel 运行结束后又得使用计算器再次验证结果）。当时有跟她商量过是不是可以考虑使用代码来实现。可是她嫌麻烦，又怕事，也不懂编程，觉得没有必要。在说完她的 N 个理由后，我那仅存的一丁点的码农精神彻底无语。也就罢了，自己还有一堆的事情要去完成。&lt;/p&gt;

&lt;p&gt;这几天正值假期空闲，又想起这件事情。手痒痒的，便自觉不自觉的拿起键盘，开始稀里哗啦的敲击。以下是事后的备忘录，以防这位同事日后问起程序的任何问题，我好歹还能把这篇博客拿出来。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;基本思路&lt;/h2&gt;
&lt;p&gt;其实整个程序的思路应该是很明朗的：使用股票代码作为参数输入，经过函数转换，得到想要的结果。具体点，就是个股的收益率计算，比赛排名与得分，总体的平均收益率。另外最好能够添加个股的基本情况介绍，如主营业务，当日行情，累计收益率等。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输入参数&lt;/h3&gt;
&lt;p&gt;要求输入的参数越少越好，中间的格式转换全交给代码去处理。我想了一下，最简单的输入参数必须包括（姐们，实在不能再少了）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;股票代码，如 &lt;code&gt;600562&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;股票推荐价格。由于第一支股票是在开盘时间推荐，故而可以直接使用开盘价格作为推荐价。那么我们只需要输入第二支股票的价格即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一言以蔽之，就是形如以下格式的代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FL &amp;lt;- c(&quot;600990&quot;, &quot;300020&quot;, 29.3)
 
WW &amp;lt;- c(&quot;300168&quot;, &quot;600562&quot;, 40)
 
LYJ &amp;lt;- c(&quot;002594&quot;, &quot;000768&quot;, 16)
 
WXZ &amp;lt;- c(&quot;601766&quot;, &quot;601818&quot;, 2.74)
 
YYY &amp;lt;- c(&quot;600967&quot;, &quot;601002&quot;, 11.25)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，需要注意的是：由于深圳股市的股票有部分是从 &lt;code&gt;00&lt;/code&gt; 开头的，这要求我们在输入股票代码的时候，不能以数值形式储存，不然前面的 &lt;code&gt;00&lt;/code&gt; 就会消失。因此，我使用字符型来保存。可看&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;str(FL)

##  chr [1:3] &quot;600990&quot; &quot;300020&quot; &quot;29.3&quot;

is.character(FL)

## [1] TRUE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-4&quot;&gt;默认参数&lt;/h3&gt;
&lt;p&gt;现在，我们得到了有关股票的代码与推荐价格的信息。接下来就是如何利用这少得可怜的输入参数来获得信息。&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;数据库选择&lt;/h4&gt;
&lt;p&gt;首先遇到的难题就是使用哪个数据库来获取股票信息。其实，现在网上有很多的免费数据可以提供了股票 &lt;code&gt;OHLC&lt;/code&gt; 以及成交量的信息。但是信息不够齐全，要求我们在不同的数据库来回折腾。所幸，公司给我们配置了万得数据库。目前这个数据库自带的提供了 &lt;code&gt;R&lt;/code&gt; 软件包，同时还提供了一系列的接口可以获取信息。这些信息囊括了股票行情、三大报表、公司基本情况等，算是做的不错的。因此，我觉得使用软件包 &lt;code&gt;WindR&lt;/code&gt; 来解决数据的问题。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：由于我是在 &lt;code&gt;Linux&lt;/code&gt; 上面写博客，而现在万得只能运行在 &lt;code&gt;Windows&lt;/code&gt; 系统下面。因此具体的代码运行结果也就无法实时展示。我尽量把在 &lt;code&gt;Windows&lt;/code&gt; 系统下运行的结果转移过来。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下面代码是启动宏包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(WindR)
w.start(waitTime=60,showmenu=F)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;section-6&quot;&gt;代码转换&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;WindR&lt;/code&gt; 要求的股票代码必须以尾缀 &lt;code&gt;.SH&lt;/code&gt; 或者 &lt;code&gt;.SZ&lt;/code&gt; 来表示，而我们最初的输入代码只有数字（字符型），因此虚影相应的转换函数。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## 用于 WindR 代码格式转换
STOCK.CODE.WindR &amp;lt;- function(ticker){
  if(substr(ticker, 1, 1) == 0|3)
    TICKER &amp;lt;- paste(substr(ticker, 1, 6),&quot;.SZ&quot;, sep=&quot;&quot;)
  if(substr(ticker, 1, 1) == 6)
    TICKER &amp;lt;- paste(substr(ticker, 1, 6),&quot;.SH&quot;, sep=&quot;&quot;)
  return(TICKER)
}

## 转换代码格式
ticker.transform &amp;lt;- function(x){
  for(i in 1:2){
    x[i] = STOCK.CODE.WindR(x[i])
  }
  return(x)
}

FL &amp;lt;- ticker.transform(FL)
WW &amp;lt;- ticker.transform(WW)
LYJ &amp;lt;- ticker.transform(LYJ)
WXZ &amp;lt;- ticker.transform(WXZ)
YYY &amp;lt;- ticker.transform(YYY)
###
  
R&amp;gt; FL
[1] &quot;600990.SH&quot; &quot;300020.SZ&quot; &quot;29.3&quot;  
R&amp;gt; WW
[1] &quot;300168.SZ&quot; &quot;600562.SH&quot; &quot;40&quot; 
R&amp;gt; LYJ
[1] &quot;002594.SZ&quot; &quot;000768.SZ&quot; &quot;16&quot; 
R&amp;gt; WXZ
[1] &quot;601766.SH&quot; &quot;601818.SH&quot; &quot;2.74&quot; 
R&amp;gt; YYY
[1] &quot;600967.SH&quot; &quot;601002.SH&quot; &quot;11.25&quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-7&quot;&gt;行情信息&lt;/h2&gt;
&lt;p&gt;下面就是这个函数的核心部分，以代码作为输入，来获取股票的行情信息。为了日后数据维护的方便，我把数据库分解开来，即第一支股票的基本情况，第二支股票的基本情况，以后两只股票汇总后的情况，这包括平均收益率，排名，得分等等。&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;第一支股票&lt;/h3&gt;

&lt;p&gt;第一支股票把股票的开盘价作为推荐价，因此可以没有推荐价显示。这个也方便平时同事们输入便捷、快速的习惯。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#########################################################################
## 第一支股票的基本情况：
## ticker1
#########################################################################
ticker1=c(FL[1], WW[1], LYJ[1], WXZ[1], YYY[1])
inf1 &amp;lt;- data.frame(ticker1,
               name1 = rep(NA,5),
               open1 = rep(0,5),
               close1 = rep(0,5),
               return1 = rep(0,5),
               rank1  = rep(0,5),
               Add.Score = rep(0,5))
##      
for(i in 1:5){
  inf1$name1[i] = w.wss(inf1$ticker1[i], 'sec_name')$Data$SEC_NAME            ## 股票名称
  inf1$open1[i] = w.wss(inf1$ticker1[i], 'pre_close,open,high,low,close',     ## 开盘价
                        tradeDate = TradeDate)$Data$OPEN                     
  inf1$close1[i] = w.wss(inf1$ticker1[i], 'pre_close,open,high,low,close',    ## 收盘价
                         tradeDate = TradeDate)$Data$CLOSE
  inf1$return1[i] = ( inf1$close1[i] - inf1$open1[i] ) / inf1$open1[i] * 100  ## 收益率
}

## 加分项设置
for(i in 1:5){
  inf1$rank1[i] = which(sort(inf1$return1, decreasing = TRUE) == inf1$return1[i])   ## ticker1 排名 
  if(inf1$return1[i] &amp;gt;= 15){inf1$Add.Score[i] = 5}
  else{
    if(inf1$return1[i] &amp;gt;= 10){inf1$Add.Score[i] = 3}
    else{
      if(inf1$return1[i] &amp;gt;= 5){inf1$Add.Score[i] = 1}
      else{
        if(inf1$return1[i] &amp;gt; -5){inf1$Add.Score[i] = 0}
        else{
          if(inf1$return1[i] &amp;gt;= -10){inf1$Add.Score[i] = -1.5}
          else inf1$Add.Score[i] = -3
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-9&quot;&gt;第二支股票&lt;/h3&gt;

&lt;p&gt;第二支需要选择一个合适的时间点推荐的，因此需要把推荐价格当作输入。具体代码如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#########################################################################
## 第二支股票的基本情况：
## ticker2
#########################################################################
ticker2 = c(FL[2], WW[2], LYJ[2], WXZ[2], YYY[2])
buy2 = as.numeric(c(FL[3], WW[3], LYJ[3], WXZ[3], YYY[3]))      ## 第二支股票的建仓价： buy2
inf2 &amp;lt;- data.frame(ticker2,
                   name2 = rep(NA,5),
                   open2 = rep(0,5),
                   buy2,
                   close2 = rep(0,5),
                   return2 = rep(0,5),
                   rank2  = rep(0,5))
##
for(i in 1:5){
  inf2$name2[i] = w.wss(inf2$ticker2[i], 'sec_name')$Data$SEC_NAME            ## 股票名称
  inf2$open2[i] = w.wss(inf2$ticker2[i], 'pre_close,open,high,low,close',     ## 开盘价
                        tradeDate = TradeDate)$Data$OPEN
  inf2$close2[i] = w.wss(inf2$ticker2[i], 'pre_close,open,high,low,close',    ## 收盘价
                         tradeDate = TradeDate)$Data$CLOSE
  inf2$return2[i] = ( inf2$close2[i] - inf2$buy2[i] ) / inf2$buy2[i] * 100    ## 收益率
}

for(i in 1:5){
  inf2$rank2[i] = which(sort(inf2$return2, decreasing = TRUE) == inf2$return2[i])   ## ticker2 排名
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;section-10&quot;&gt;汇总&lt;/h3&gt;

&lt;p&gt;下面就是把两只股票的信息做一个汇总&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#########################################################################
## 两支股票的汇总情况: inf
## ticker1 + ticker2
#########################################################################
inf &amp;lt;- data.frame(Avr.Return = rep(0,5),             ## 平均收益率
                  Rank = rep(0,5),                   ## 总排名
                  Rank.Score  = rep(0,5),            ## 排名得分
                  Total.Score = rep(0,5))            ## 总得分
for(i in 1:5){
  inf$Avr.Return[i] = ( inf1$return1[i] + inf2$return2[i]) / 2
}
### 
for(i in 1:5){
  inf$Rank[i] = which(sort(inf$Avr.Return, decreasing = TRUE) == inf$Avr.Return[i])
  if(inf$Rank[i] == 1)
    inf$Rank.Score[i] = 2
  else{
    if(inf$Rank[i] == 2)
      inf$Rank.Score[i] = 1
    else
      inf$Rank.Score[i] = 0
  }
}
#########################################################################
##  汇总情况: df
## inf1 + inf2 + inf
#########################################################################
df &amp;lt;- data.frame()
df &amp;lt;- data.frame(t(rep(0,5)))

df &amp;lt;- cbind(inf1, inf2, inf)
for(i in 1:5){
  df[i,18] = df[i,7] + df[i,17]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面我们来看一下有什么惊喜呢。以下是我随意模拟的一个投资组合，看看他们在某个交易日的收益情况。从目前的结果来看，基本符合我们前期想要达到的效果。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R&amp;gt; df
    ticker1    name1 open1 close1 return1 rank1 Add.Score
1 600990.SH 四创电子 44.68  44.93   0.560     1         0
2 300168.SZ 万达信息 27.49  27.60   0.400     2         0
3 002594.SZ   比亚迪 49.15  48.83  -0.651     5         0
4 601766.SH 中国南车  5.27   5.26  -0.190     3         0
5 600967.SH 北方创业 16.00  15.94  -0.375     4         0
    ticker2    name2 open2  buy2 close2 return2 rank2
1 300020.SZ 银江股份 29.00 29.30  30.65    4.61     1
2 600562.SH 国睿科技 41.11 40.00  40.54    1.35     3
3 000768.SZ 中航飞机 15.79 16.00  15.79   -1.31     5
4 601818.SH 光大银行  2.77  2.74   2.77    1.09     4
5 601002.SH 晋亿实业 11.29 11.25  11.41    1.42     2
  Avr.Return Rank Rank.Score Total.Score
1      2.584    1          2           2
2      0.875    2          1           1
3     -0.982    5          0           0
4      0.453    4          0           0
5      0.524    3          0           0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-11&quot;&gt;结果输入&lt;/h2&gt;

&lt;p&gt;以上我们得到了一个初步的结果。如何把我们实现的结果输入到合适的文本，这是一个一直困扰我的问题。&lt;/p&gt;

&lt;p&gt;本人倾向于使用网页 （Html5 + css3），一来简单大方，可以使用 &lt;code&gt;markdown&lt;/code&gt; 语法输入，二者通用性极强，基本上任何一台笔记本和手持移动设备都可以查看。可是我所在的公司似乎对这个先进性极强的新鲜事物抱着莫须有的排斥。也罢，道不同不相为谋。&lt;/p&gt;

&lt;p&gt;他们更习惯习惯 MS 那套极其低效率与奇丑无比的 Office 套装。后来我能想到的唯一解就是放弃使用 Html， 改走 PDF 路线。也就是，PDF 也可以佯装 Word 的模样，既不灭了自己的志气，还涨了他人的威风，可谓一举两得。&lt;/p&gt;

&lt;h3 id=&quot;latex&quot;&gt;LaTeX&lt;/h3&gt;
&lt;p&gt;以前读书的时候，把老师折磨的不行了，非得使用 &lt;code&gt;Beamer&lt;/code&gt; 来制作 slide。幸好，也因此有缘结识 &lt;code&gt;LaTeX&lt;/code&gt; 这个神一样的文档处理系统。她特别擅长与制作科学类的文档，同时也由于其具有良好的可控性，比较适合制作严格版面设计的文稿，这些文档具有高度的可重复利用价值，因此国际上几乎所有的期刊都要求作者提供 &lt;code&gt;.tex&lt;/code&gt; 格式的论文稿件。&lt;/p&gt;

&lt;p&gt;我一个初步的想法是使用 &lt;code&gt;LaTeX&lt;/code&gt; 内在的编辑系统来生成 PDF 文件，通过设计一个文件模板使得这个文件具有可重复利用，以后每次要生成报告，就只需要输入股票代码就可以了，其他的版面控制全部交由模板来处理。&lt;/p&gt;

&lt;p&gt;可是真正的使用 &lt;code&gt;LaTeX&lt;/code&gt; 还是挺麻烦的，以前为了写一个助教课件，都得整整在图书馆泡着。满屏幕的代码，而且稍不注意，缺少个 &lt;code&gt;}&lt;/code&gt; 啥的就彻底崩溃了，还得一个个检查看在哪一行出错。当年就是这样被虐千百遍才慢慢开始对其有了些许的驾驭能力。如今我已不入江湖，此般神功怕是荒废了时日，功力减退，深感「廉颇老矣」、屠龙不宜。&lt;/p&gt;

&lt;h3 id=&quot;markdown&quot;&gt;markdown&lt;/h3&gt;
&lt;p&gt;可是我这个人又喜欢「偷懒」，如果一件事情可以通过代码来事先，而不是机械的体力劳动，那么我会欣然去设计这样的程序的。作为半个码农的孩子又暴露了。&lt;/p&gt;

&lt;p&gt;在目前我使用的文档编辑语言里面，&lt;code&gt;markdown&lt;/code&gt; 可以是最简单明了、通俗易懂、老少咸宜，算得上了每个 hacker 必备的，可谓「居家旅行、杀人灭口、走亲访友、把妹泡茶」的神器。那么，我想要达到的效果就是&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;既可以享受 &lt;code&gt;markdown&lt;/code&gt; 带来的便捷，有可以利用  &lt;code&gt;LaTeX&lt;/code&gt; 强大的文档编辑功能，达到「事半功倍」的效果。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;latex--markdown&quot;&gt;LaTeX + markdown&lt;/h3&gt;
&lt;p&gt;冥冥之中必要答案！&lt;/p&gt;

&lt;p&gt;以前陈海强老师给我们上时间序列课程的时候，使用 &lt;code&gt;R&lt;/code&gt; 作为程序语言。可是陈老师似乎不怎么谈「用户体验」的高深问题，本来 &lt;code&gt;R&lt;/code&gt; 自带的 GUI 就很丑，他还当着全班同学「群众贼亮的眼睛」、通过投影仪无极限的放大给大家看。当时我就很无言了。&lt;/p&gt;

&lt;p&gt;后来有个叫做 &lt;code&gt;Rstudio&lt;/code&gt; 的公司（神公司=大神+神器，以后有时间再详细讨论）开发了一款极其强调用户体用的 GUI，从知道的那一瞬间，我深深的「着迷」了。直到现在，还是一个在使用。&lt;/p&gt;

&lt;p&gt;方为引子。下面进入正题。&lt;/p&gt;

&lt;p&gt;刚才有提到我一直在使用 &lt;code&gt;Rstudio&lt;/code&gt;。可是这有一个问题，一旦用习惯了某款极其好用的软件，便不舍得去改变，也不怎么去更新。以至于 &lt;code&gt;Rstudio&lt;/code&gt; 后来增添了许多新功能，我也没来得及尝试。现在，&lt;code&gt;Rstudio&lt;/code&gt; 已经高度融合了 &lt;code&gt;knitr&lt;/code&gt; 与 &lt;code&gt;markdown&lt;/code&gt; 的特征，通过软件包 &lt;code&gt;rmarkdown&lt;/code&gt; 实现  &lt;code&gt;LaTeX&lt;/code&gt; 与 &lt;code&gt;markdown&lt;/code&gt; 的完美结合。整体的思路是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首先建议一个 &lt;code&gt;.Rmd&lt;/code&gt; 的文件，里面可以使用 &lt;code&gt;markdown&lt;/code&gt;，同时配合 &lt;code&gt;R&lt;/code&gt; 代码实现文学编程（literate programming）。&lt;/li&gt;
  &lt;li&gt;然后使用 &lt;code&gt;pandoc&lt;/code&gt; 转换 &lt;code&gt;.Rmd&lt;/code&gt; 的文件，生成的是一个 &lt;code&gt;.tex&lt;/code&gt; 文件。&lt;/li&gt;
  &lt;li&gt;最后，使用  &lt;code&gt;LaTeX&lt;/code&gt; 来实现 PDF 输出。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面是一个例子，我们可以事先建立一个模板。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &quot;荐股大赛&quot;
author: 方莲
date:   \cntoday
output:
  pdf_document:
    highlight: tango
    keep_tex: yes
    latex_engine: xelatex
    number_sections: yes
    template: set\advice_default.tex
    toc: yes
    toc_depth: 3
    fig_height: 7
    fig_width: 8
  html_document:
    toc: yes
pagecolor: aliceblue
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;模板（可以点击查看大图）：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig01.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig01.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig02.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig02.jpg&quot; alt=&quot;latex-markdown2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig03.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig03.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig04.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig04.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig05.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig05.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig06.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig06.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig08.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig08.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig09.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig09.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-12&quot;&gt;成果展示&lt;/h2&gt;

&lt;p&gt;通过以上模板，我们每次只需要输入参数，然后通过 &lt;code&gt;Rstudio&lt;/code&gt; 即可自动生成一个像样的文件了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig07.jpg&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-10-03-ma-nong-de-jia-qi/fig07.jpg&quot; alt=&quot;latex-markdown1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/10/03/ma-nong-de-jia-qi/</link>
                <guid>http://williamlfang.github.com/cn/2014/10/03/ma-nong-de-jia-qi/</guid>
                <pubDate>2014-10-03 00:00:00 +0800</pubDate>
                <category></category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>GoAgent启动后无反应的问题解决方法</title>
                <description>&lt;p&gt;我一直都在使用 Google 开发的一款翻墙插件上网。这个「神器」在我的博客里面也有&lt;a href=&quot;http://williamlfang.github.io/cn/2014/01/05/goagent/&quot;&gt;介绍&lt;/a&gt;。科学上网，远离 GFW。&lt;/p&gt;

&lt;p&gt;不过十分蹊跷的是，这几天使用 &lt;code&gt;Goagent&lt;/code&gt; 的时候出现了不明的原因。情况是这样的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;正常启动 &lt;code&gt;goagent-gtk.py&lt;/code&gt; 后可以现实界面，没有报错的情况。可是也没有出现 &lt;code&gt;log&lt;/code&gt; 上传信息的提示。然后使用 &lt;code&gt;Chrome&lt;/code&gt; 登入，已经无法翻墙了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;p&gt;无法翻墙对我来说就像关进了一个思想的囚牢，难以自由。现在连基本的 &lt;code&gt;Google&lt;/code&gt; 网站都无法登入，使用 &lt;code&gt;Baidu&lt;/code&gt; 来搜索，根本就没有任何的记录。&lt;/p&gt;

&lt;p&gt;我首先想到的是必须要通过 &lt;code&gt;Google&lt;/code&gt; 来寻求帮助。我在 &lt;code&gt;Linux&lt;/code&gt; 的主机下有安装了 &lt;code&gt;VirtualBox&lt;/code&gt;，里面的 &lt;code&gt;Chrome&lt;/code&gt; 是可以正常访问 &lt;code&gt;Google&lt;/code&gt; 的。联想到我以前是通过修改 &lt;code&gt;hosts&lt;/code&gt; 进行简单的翻墙，因此首先复制一份 &lt;code&gt;Windows&lt;/code&gt; 里面的 &lt;code&gt;hosts&lt;/code&gt;到 &lt;code&gt;Linux&lt;/code&gt; 在 &lt;code&gt;ets\hosts&lt;/code&gt;。这样是基本可以访问 &lt;code&gt;Google&lt;/code&gt; 了。&lt;/p&gt;

&lt;p&gt;通过 Google 搜索以下问题，立马就有类似的&lt;a href=&quot;https://code.google.com/p/goagent/issues/detail?id=11826&quot;&gt;情况出现&lt;/a&gt;了&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;goagent  启动后 没反应&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;找到上面的提示，说是可能跟某个插件有冲突。同时，下面的评论里面也有提到说可能会跟优酷的一款去广告插件冲突。突然想到前几天有通过 Chrome Store 安装了一个取出优酷视频广告的插件，然后接下来的几天都无法使用 &lt;code&gt;Goagent&lt;/code&gt; 了。果断去去把这个插件删除了。接下来重启 &lt;code&gt;goagent-gtk.py&lt;/code&gt;，立马就满血了。好开心，有可以翻墙了。&lt;/p&gt;

&lt;p&gt;兹作记录。&lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/08/13/goagent-qi-dong-hou-wu-fan-ying-de-wen-ti-jie-jue-fang-fa/</link>
                <guid>http://williamlfang.github.com/cn/2014/08/13/goagent-qi-dong-hou-wu-fan-ying-de-wen-ti-jie-jue-fang-fa/</guid>
                <pubDate>2014-08-13 00:00:00 +0800</pubDate>
                <category>Google</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>军工版块整理</title>
                <description>&lt;h5 id=&quot;httpxueqiucom839488184330619814&quot;&gt;&amp;gt; 主要参考&lt;a href=&quot;http://xueqiu.com/8394881843/30619814&quot;&gt;军工集团整理&lt;/a&gt;&lt;/h5&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;section&quot;&gt;中国兵器工业集团&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;北化股份  &lt;/li&gt;
  &lt;li&gt;华锦股份  &lt;/li&gt;
  &lt;li&gt;江南红箭  &lt;/li&gt;
  &lt;li&gt;晋西车轴 &lt;/li&gt;
  &lt;li&gt;北方股份 &lt;/li&gt;
  &lt;li&gt;北方导航                             &lt;/li&gt;
  &lt;li&gt;凌云股份 &lt;/li&gt;
  &lt;li&gt;长春一东 &lt;/li&gt;
  &lt;li&gt;光电股份 &lt;/li&gt;
  &lt;li&gt;北方创业 &lt;/li&gt;
  &lt;li&gt;北方国际 &lt;/li&gt;
  &lt;li&gt;辽通化工&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;中国兵器装备集团&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;湖南天雁 &lt;/li&gt;
  &lt;li&gt;西仪股份 &lt;/li&gt;
  &lt;li&gt;中原特钢 &lt;/li&gt;
  &lt;li&gt;利达光电 &lt;/li&gt;
  &lt;li&gt;中国嘉陵 &lt;/li&gt;
  &lt;li&gt;*st天威                              &lt;/li&gt;
  &lt;li&gt;长安汽车 &lt;/li&gt;
  &lt;li&gt;北方国际&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;中国航天科技集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;航天电子 &lt;/li&gt;
  &lt;li&gt;航天动力 &lt;/li&gt;
  &lt;li&gt;中国卫星 &lt;/li&gt;
  &lt;li&gt;航天机电&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;中国航天科工集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;航天长峰 &lt;/li&gt;
  &lt;li&gt;航天通信 &lt;/li&gt;
  &lt;li&gt;航天晨光 &lt;/li&gt;
  &lt;li&gt;航天科技 &lt;/li&gt;
  &lt;li&gt;航天信息 &lt;/li&gt;
  &lt;li&gt;航天电器&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;中国航空工业集体&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;洪都航空 &lt;/li&gt;
  &lt;li&gt;哈飞股份 &lt;/li&gt;
  &lt;li&gt;中航电子 &lt;/li&gt;
  &lt;li&gt;成发科技 &lt;/li&gt;
  &lt;li&gt;中航黑豹 &lt;/li&gt;
  &lt;li&gt;中航动控&lt;/li&gt;
  &lt;li&gt;中航飞机  &lt;/li&gt;
  &lt;li&gt;中航重机 &lt;/li&gt;
  &lt;li&gt;航空动力 &lt;/li&gt;
  &lt;li&gt;中航机电 &lt;/li&gt;
  &lt;li&gt;贵航股份 &lt;/li&gt;
  &lt;li&gt;成飞集成&lt;/li&gt;
  &lt;li&gt;中航光电 &lt;/li&gt;
  &lt;li&gt;*st三鑫 &lt;/li&gt;
  &lt;li&gt;中航地产 &lt;/li&gt;
  &lt;li&gt;飞亚达A  &lt;/li&gt;
  &lt;li&gt;深天马A  &lt;/li&gt;
  &lt;li&gt;天虹商场&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-5&quot;&gt;中国电子科技集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;四创电子 &lt;/li&gt;
  &lt;li&gt;国瑞科技 &lt;/li&gt;
  &lt;li&gt;太极股份 &lt;/li&gt;
  &lt;li&gt;华东电脑 &lt;/li&gt;
  &lt;li&gt;卫士通 &lt;/li&gt;
  &lt;li&gt;杰赛科技&lt;/li&gt;
  &lt;li&gt;海康威视&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-6&quot;&gt;中国船舶工业集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;中国船舶 &lt;/li&gt;
  &lt;li&gt;中船股份 &lt;/li&gt;
  &lt;li&gt;广船国际&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-7&quot;&gt;中国船舶重工集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;中国重工 &lt;/li&gt;
  &lt;li&gt;风帆股份&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-8&quot;&gt;中国核工业集团&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;中核科技 &lt;/li&gt;
  &lt;li&gt;中核太白 &lt;/li&gt;
  &lt;li&gt;中核国际&lt;/li&gt;
&lt;/ul&gt;
<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/08/11/jun-gong-ban-kuai-zheng-li/</link>
                <guid>http://williamlfang.github.com/cn/2014/08/11/jun-gong-ban-kuai-zheng-li/</guid>
                <pubDate>2014-08-11 00:00:00 +0800</pubDate>
                <category>金融</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>WindR介绍</title>
                <description>&lt;p&gt;时下金融界正在热火朝天地讨论如何应对「金融大数据」对股市研究的影响。我的个人看法是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;有总比没有好。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果换做几年前，我们去研究沪深市场，查看个股行情，唯一能得到的数据是由各个券商预装的交易软件。这些往往只能得到一个大体的、模糊的、有限制使用权限的金融数据，大抵上只能得到股市的基本行情变动，无法确切的得
到每只股票的具体交易记录更何谈再深入的进行统计模型与数据挖掘。因此，在那个时代，谁能够得到更新的、更全的、更具有实质内容的金融数据，那就将得到一个统计研究的制高点。如果我们去翻看前几年的金融期刊，也会发
现一些规律，即往往那些也已发表的文章，仅仅是因为其得到的数据较于他人更具有「故事性」，而非其用作数据分析的统计或计量方法有多好（甚至可称「低级趣味」）。因此，大家都击破脑门去花钱找数据，也是情理所在。&lt;/p&gt;

&lt;p&gt;那么，现在已然进入了一个金融数据大暴发的新时期，互联网的高速发展与深入推进提供了社交媒介在我们日常生活与工作当中的主角地位，而这里移动设备每时每刻都在记录着任何可供追踪记录的「信息」。现在，所谓「信息」
的概念，已经不仅仅是停留在传统理念下的生产与消费记录，如投入产出表，而是扩大性的囊括了与个体活动有关的交易、社交、活动、娱乐、观点等综合数据。这些数据一方面具有「大」与「多」的特征，通常移动设备每天得到
的数据是以 TB 来衡量的，另一方面还具有「细」与「密」的个体性特征，往往可以追踪记录任何一个通过互联网发生活动的个体每日的活动情况。现在，这些数据可以供我们进行传统统计由于数据维度灾难而无法完成的分析，提
供了一个全新的视角。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;windr-&quot;&gt;&lt;strong&gt;WindR&lt;/strong&gt; 初识&lt;/h2&gt;
&lt;p&gt;说到金融数据，我们不得不提 &lt;strong&gt;Wind&lt;/strong&gt;。作为目前国内首屈一指的金融讯息提供商，Wind 在金融界的地位无可替代，其提供的全方位、多领域、高质量的经济与金融数据强有力的支持了我们对金融市场的研究分析。我个人目前的
工作基本上就是依赖 Wind 的数据输出与图形可视化来实现的。因此，当我听说 Wind 现在也提供了 &lt;strong&gt;R&lt;/strong&gt; 的 API 借口时，本人竟然感到无比的激动，这种激动就像麦兜在听到华仔唱歌时那个无以抑制的想要「尿尿」的感觉。现
在，我可以通过 &lt;strong&gt;WindR&lt;/strong&gt; 插件，直接读取 Wind 里面的金融数据，接下来便可以利用 R 强大的统计分析与数据可视化功能了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这里多唠叨几句。其实 Wind 在几年前就已经开始尝试提供多种数据处理软件的接口了。例如，在 2012 年的时候推出的 Excel 接口，可以方便我们在 Excel 里面直接导出想要的数据，其中包括了个股的基本面时间序列数据、
日间与日内高频行情数据、历史快照与实时截面数据、日内分钟更新数据、上市公司财务报表等。同时，考虑到 Matlab 在金融建模领域的重要性，Wind 还推出了 Matlab 的接口，利用 Excel 通道来获得相关数据，并且辅之以 
Matlab 程序设计。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;如何安装&lt;/h2&gt;

&lt;h3 id=&quot;section-1&quot;&gt;系统要求&lt;/h3&gt;

&lt;p&gt;目前，由于 Wind 客户端只能在 Windows 系统下运行，因而其提供的所有软件接口都要求必须是安装在 Windows 操作系统环境下。目前我的绝大部分工作都是在 Linux Ming Qiana 操作系统下完成，所以无奈的我只好在原本就只
有 120G 大小的 SSD 硬盘中「忍辱割地」建立一个 Virtuabox 虚拟机，里面运行 Win7 系统。这个大小设定为 30G （只好这样子了）。&lt;/p&gt;

&lt;p&gt;这里总结了一下需要的配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Windows 系统，同时支持 32 位 和 64 位。&lt;/p&gt;

    &lt;p&gt;目前我使用的是 Win7 64位的操作系统，Linux 主机内存为 4G + 1G，因而给虚拟机划分了大概有 2.5G 的内存（Linux 主机也是 64 位的，不过基本不怎么「吃」内存）。磁盘空间为 30G 固定大小，设置固定大小可以提供
运行速度。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;官方要求 R 2.15.0 以上的环境。&lt;/p&gt;

    &lt;p&gt;不过大概现在没有人会停留在 2 时代了，目前 CRAN 提供下载是已经 R 3.1.0 了。本人目前使用没有任何压力。所以建议大家可以升级的就动动手吧，表示一下对 R Core 团队辛苦劳作的支持喽。R 的安装我以前在博客有介
绍，大家可以去博客里面看看。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;由于安装的借口插件需要写入&lt;strong&gt;注册表&lt;/strong&gt;，因此需要系统管理员权限。所以请重新启动切换到管理员 Adm 。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;安装过程&lt;/h3&gt;

&lt;p&gt;下面开始介绍如何在系统里面安装 WindR 软件包。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;打开 Wind 客户端&lt;/li&gt;
&lt;/ul&gt;

&lt;!--
   [![打开 Wind 客户端](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img01.jpg)](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img01.jpg)

- 在客户端左上角点击 `文件`，出现下拉框，选择 `修复插件` - 选择 `修复R插件`，得到下面的操作界面。

   [![修复插件](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img02.jpg)](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img02.jpg)

   [![修复插件2](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img03.jpg)](/cn/assets/images/r-figures/2014-08-08-windr-jie-shao/img03.jpg)
 --&gt;
&lt;ul&gt;
  &lt;li&gt;根据提示，按任意键完成安装过程。这样，完整的 &lt;code&gt;WindR&lt;/code&gt; 扩展包便成功在 R 中安装。接下来便是如何使用插件来辅佐研究。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windr--1&quot;&gt;WindR 使用教程&lt;/h2&gt;
&lt;p&gt;### 加载包
与 R 中的其他扩展包一样，使用 WindR 前也需要预先加载。使用如下命令&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
library(WindR)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;经过扩展包的加载，我们便可以开始使用 &lt;code&gt;WindR&lt;/code&gt; 里面的命令了。&lt;/p&gt;

&lt;h3 id=&quot;windr&quot;&gt;启动 &lt;code&gt;WindR&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;加载 WindR 后，在真正开始操作之前，我们需要使用命令登入 Wind 客户端并以命令的形式激活插件。命令如下：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
 w.start(showmenu = FALSE, waitTime = 60);   ## 缺省设置为「显示导航界面」,命令超时时间为 300 秒
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
## $ErrorCode
## [1] 0
## 
## $ErrorMsg
## [1] &quot;Already conntected!&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;不过我一般选择在启动前预先加载常用包。这个在系统的 etc\Rprofile.site 中设置。通常，我个人的加载包如下&lt;/p&gt;

&lt;p&gt;```r
options(“width”=160)                # wide display with multiple monitors
options(“digits.secs”=3)            # show sub-second time stamps&lt;/p&gt;

&lt;p&gt;setHook(packageEvent(“grDevices”, “onLoad”),
    function(…) grDevices::X11.options(width=8, height=8, 
                                         xpos=0, pointsize=10, 
                                         #type=”nbcairo”))  # Cairo device
                                         #type=”cairo”))    # other Cairo dev
                                         type=”xlib”))      # old default                                         &lt;br /&gt;
options(prompt=”R&amp;gt; “, digits=4, show.signif.stars=FALSE)
options(“pdfviewer”=”okular”)         # on Linux, use okular as the pdf viewer&lt;/p&gt;

&lt;p&gt;.First &amp;lt;- function() {
library(graphics)
options(“repos” = c(CRAN = “http://mirrors.softliste.de/cran/”, CRANextra=”http://www.stats.ox.ac.uk/pub/RWin”))
options(“device” = “quartz”) 
library(zoo)
library(xts)
library(TTR)
library(quantmod)&lt;br /&gt;
library(ggplot2) 
library(WindR)
w.start()
}&lt;/p&gt;

&lt;p&gt;.Last &amp;lt;- function() {
if (!any(commandArgs()==’–no-readline’) &amp;amp;&amp;amp; interactive()){
timestamp(,prefix=paste(“##—— [“,getwd(),”] “,sep=””))
try(savehistory(“~/.Rhistory”))
}}
last &amp;lt;- function (x, n=1, …) tail(x, n=n, …)
```&lt;/p&gt;

&lt;h3 id=&quot;windr--2&quot;&gt;WindR 操作命令规范&lt;/h3&gt;
&lt;p&gt;任何的命令都以 &lt;code&gt;w.&lt;/code&gt; 开始&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WindR&lt;/code&gt; 为了对 &lt;code&gt;R&lt;/code&gt; 命令做出统一的规范，特别适用了在各个命令语句前面添加 &lt;code&gt;w.&lt;/code&gt; 以示区别于普通的R命令格式。因此，我们开始调用导航栏时，可以使用命令&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
w.menu() # 首次使用显示导航界面
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## NULL
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
w.menu() # 第二次关系到导航界面
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## NULL
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
w.menu('wsd') # 显示 w.wsd() 导航 
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## NULL
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;命令严格区分大小写&lt;/h4&gt;

&lt;p&gt;我们知道，&lt;code&gt;R&lt;/code&gt; 作为一门编程语言，是严格区别大小写的，比如&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
X &amp;lt;- c(1,2,3)   ## 大写的 `X`
x &amp;lt;- seq(3,5)   ## 小写的 `x`
(X == x)        ## 判断二者是否相等
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## [1] FALSE FALSE FALSE
&lt;/code&gt;
因此，必然的，扩展包 &lt;code&gt;WindR&lt;/code&gt; 也同样需要严格区分大小写命令。例如，&lt;code&gt;beginTime&lt;/code&gt; 不能写成 &lt;code&gt;begintime&lt;/code&gt; 或者 &lt;code&gt;BeginTime&lt;/code&gt;。这些需要我们在往后的使用中多加注意，不要把大小写不同的命令代码搞混淆了。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;引号内输入不区分大小写&lt;/h4&gt;

&lt;p&gt;以上我们分析了在命令语句中 &lt;code&gt;WindR&lt;/code&gt; 继承了 &lt;code&gt;R&lt;/code&gt; 编程语言严格区分大小写的规定。可是，现在 WindR 又更加具有灵活性，提出了允许在引号内部是可以允许使用大小写混合输出的，不再做严格区分。比如，&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
w.wsd('090007.IB','close',Sys.Date()-5,Sys.Date(),'Priceadj=F;tradingcalendar=NIB')
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## $ErrorCode
## [1] 0
## 
## $Data
##      DATETIME CLOSE
## X1 2014-08-12 3.968
## X2 2014-08-13 3.960
## X3 2014-08-14 3.930
## X4 2014-08-15 3.950
## 
## $Code
## [1] &quot;090007.IB&quot;
&lt;/code&gt;
等同于命令&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
w.wsd('090007.ib','CLOSE',Sys.Date()-5,Sys.Date(),'Priceadj=f;tradingcalendar=nib')
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## $ErrorCode
## [1] 0
## 
## $Data
##      DATETIME CLOSE
## X1 2014-08-12 3.968
## X2 2014-08-13 3.960
## X3 2014-08-14 3.930
## X4 2014-08-15 3.950
## 
## $Code
## [1] &quot;090007.IB&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;支持数组形式的输入格式&lt;/h4&gt;

&lt;p&gt;所谓数组形式，即包含多个参数的向量。&lt;code&gt;WindR&lt;/code&gt; 是允许我们使用更加高效的方法来输出多个参数变量的。比如，为了输出&lt;/p&gt;

&lt;p&gt;```r
stock01 &amp;lt;- w.wss(“600000,sh, 600005.sh, 600004.sh”, “roe_avg, roa”, “rptDate = 20101231”)&lt;/p&gt;

&lt;p&gt;code &amp;lt;- c(‘600000,sh’, ‘600005.sh’, ‘600004.sh’)
field &amp;lt;- c(‘roe_avg’, ‘roa’)
stock02 &amp;lt;- w.wss(code, field, “rptDate = 20101231”)
```&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;获得相关帮助&lt;/h3&gt;
&lt;p&gt;通常我们在使用 &lt;code&gt;R&lt;/code&gt; 遇到问题，首先应该想到的是伴随其安装而预先配置的使用手册。该手册通常包括了作者能够想到的所有问题的解决方法，依然足够我们日常的使用了。&lt;/p&gt;

&lt;p&gt;在经过加载包 &lt;code&gt;library(WindR)&lt;/code&gt; 后，我们可以使用内置的帮助命令 &lt;code&gt;help()&lt;/code&gt; 来查找相关资讯。例如&lt;/p&gt;

&lt;p&gt;```r
## library(WindR)
help(WindR)&lt;/p&gt;

&lt;p&gt;help(w.wsd)
```&lt;/p&gt;

&lt;h3 id=&quot;windr--3&quot;&gt;WindR 各个命令使用说明[待续]&lt;/h3&gt;
&lt;p&gt;下面，我们分别从各个命令不同的语法结构与分析功能逐一介绍其功能、用法、特征以及可供金融数据分析使用命令。&lt;/p&gt;

&lt;h4 id=&quot;wisconnected-&quot;&gt;&lt;code&gt;w.isconnected()&lt;/code&gt; 判断客户端是否已经成功登入&lt;/h4&gt;

&lt;p&gt;由于我们使用 WindR 时需要有客户端的授权支持。因此，我们才需要一个命令查看当前操作是否已经通过了授权认证，以确定 WindR 是否登陆成功。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
## library(WindR)
w.isconnected()
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
## [1] TRUE
&lt;/code&gt;
输出结果为 TRUE 表面当前已经成功登入 Wind 客户端，可以使用 WindR 命令获得相应的数据查看权限。&lt;/p&gt;

&lt;h4 id=&quot;wasdatetime-&quot;&gt;&lt;code&gt;w.asDateTime()&lt;/code&gt; 转换日期格式与特殊处理&lt;/h4&gt;

&lt;p&gt;从用户手册中可以发现，&lt;code&gt;WindR 接口函数中的时间指标不是标准的通用格式，而是采用「以距离某个时间点的天数形式输出的」，从而是一个浮点数。因此，我们需要特殊的日期格式处理命令，即 &lt;/code&gt;.asDateTime()`。该命令的目
的在于把 WindR 中的浮点数日期数据转换为 R 的语言时间格式。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
df &amp;lt;- w.wss(&quot;600000.sh, 000002.sz&quot;, &quot;last_trade_day, pre_close&quot;)
df
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## $ErrorCode
## [1] 0
## 
## $Data
##        CODE LAST_TRADE_DAY PRE_CLOSE
## 1 600000.SH          41866      9.60
## 2 000002.SZ          41866      9.36
## 
## $Time
## [1] &quot;2014-08-17 09:31:42.005 CST&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r
df2 &amp;lt;- w.asDateTime(df$Data[,2], asdate = TRUE)
df2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
## [1] &quot;2014-08-15&quot; &quot;2014-08-15&quot;
&lt;/code&gt;&lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/08/08/windr-jie-shao/</link>
                <guid>http://williamlfang.github.com/cn/2014/08/08/windr-jie-shao/</guid>
                <pubDate>2014-08-08 00:00:00 +0800</pubDate>
                <category>金融 R</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>ggplot2入门之qplot</title>
                <description>&lt;p&gt;据说 &lt;code&gt;R&lt;/code&gt; 中那些优秀的扩展包（packages）都可以独立成一个新的统计软件，成为独霸一方的「草莽大王」，都值得我们为此「大书特书」一番。比如，时下我们会深入介绍的这款专门由于制作漂亮而不失矜持、俏丽而不失内涵、简单而不失充实的扩展包 – &lt;code&gt;ggplot2&lt;/code&gt;。然而，如果你只是把我们今天的主角简单的看作是一款为数据画图的工具的话，那么这就有失偏颇了。乍一看，似乎我们传统的思维是把数据的可（zuo）视（tu）化（xing）仅仅作为统计分析的一个附属品，权做为说明而做的图形展现。这就好比是一场豪华婚礼中只能配得的「伴娘」，虽然自身也是穿衣戴宝的，却始终不能为大家器重。不知大家有没有想过，如果我们可以同时把数据的统计分析结果与数据直观特征图形结合在一起，通过这两者的交互印证，使得分析的结果更加具有说服力。说的更加直白一些，往往有些数据的特征是无法使用自然或者数理语言简明扼要的说清楚的，这时候就需要图形化的展示来提供更加充足的信息。也就是说，利用对数据制作「量体裁衣」的可视化展现，可以为我们的提供更加全面的信息，也在一定程度上为后期的数据统计分析提供直观的印象。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;section&quot;&gt;数据可视化的基本思想&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; 能够使用简单的语法将数据的属性特征以图形可视化的形式展示出来，丰富了我们对数据的直观影响。不过，需要注意的，&lt;code&gt;ggplot2&lt;/code&gt; 只是提供了一套静态的图形输出，尤其是适合与 PDF 格式的文件。但在现在互联网与移动屏的可视化时代，难免显得有点力不从心，无法满足我们对交互式图形的诉求。因此， Rstudio 公司后来在 Xie Yihui 同学的领导下，开发了适合与显示器屏幕的动态交互式图形输出包—— &lt;code&gt;Shiny&lt;/code&gt;，以满足互联网移动屏幕的新要求。这个我们在今后介绍如何使用 \R 开发网页时再具体介绍。&lt;/p&gt;

&lt;p&gt;因此，Hadley 一上来就开宗明义的「提醒」大家不要仅仅把  &lt;code&gt;ggplot2&lt;/code&gt; 当作是一个绘图工具而已：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; `ggplot2` is a `R` package for producing statistical, or data, graphics, **but it is unlike most other graphics packages because it has a deep underlying grammer**.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里所说的图形的「语法」（grammer），最早由 Wilkinson 提出，大体的思想是把一个数据图形看作由描述数据不同特征的属性所构成的套装，通过对不同组件的选择，来达到想要（甚至是想不到）的套装效果。这其中，不同的属性组件包括了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据：通常要求数据结构是 &lt;code&gt;data.frame&lt;/code&gt;。所谓的「裸数据」，就是未经任何修改的原始数据。&lt;/li&gt;
  &lt;li&gt;几何对象：&lt;code&gt;geom&lt;/code&gt; , 希望以直观的几何图形来显示数据特征，如点、线条等。&lt;/li&gt;
  &lt;li&gt;统计转换：&lt;code&gt;stat&lt;/code&gt;,以数据统计分析的结果展示在图形中，这比传统的将统计输出单独展现具有更加直观的认识。&lt;/li&gt;
  &lt;li&gt;scales：&lt;/li&gt;
  &lt;li&gt;坐标系统：&lt;code&gt;coord&lt;/code&gt;, 描述了如何将数据通过多维图形展现出来。&lt;/li&gt;
  &lt;li&gt;分页展示：&lt;code&gt;facet&lt;/code&gt;,  就是把不同组别的数据通过分页的形式表示出来，这相当于做了一次 subsetting 的分组。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;用法说明&lt;/h2&gt;

&lt;p&gt;下面，我们来具体看看如何使用 &lt;code&gt;qplot&lt;/code&gt; 绘制精美的数据可视化图形。
&lt;code&gt;qplot&lt;/code&gt; 的基本用法和 &lt;code&gt;plot&lt;/code&gt; 大体类似。主要的参数输入有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数据：主要是使用 $x$ 和 $y$ 作为两个坐标轴，并且指定数据框类数据 \rcode{data}；&lt;/li&gt;
  &lt;li&gt;图形修饰：这个主要是通过 \rcode{aesthetics} 参数来完成，包括了
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;color&lt;/code&gt;：使用不同的颜色来区分数据&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;size&lt;/code&gt;：利用形状来区分数据&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;fill&lt;/code&gt;：主要是在进行 &lt;code&gt;histogram&lt;/code&gt; 和 &lt;code&gt;density&lt;/code&gt; 的时候用于填充不同的数据，使得各种数据的比例更加直观明显。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;几何形状方面：利用 &lt;code&gt;geom&lt;/code&gt; 来控制输出的图形几何形状，包括了
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;geom = &quot;point&quot;&lt;/code&gt;：作为默认设置，以点的形式画图；&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;geom = &quot;line&quot;&lt;/code&gt;：以线条的样子输出，通常适用于&lt;strong&gt;时间序列数据&lt;/strong&gt;；&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;geom = &quot;smooth&quot;&lt;/code&gt;：使用统计拟合输出；
 &amp;gt; &lt;code&gt;geom = &quot;path&quot;&lt;/code&gt;：与时间序列类似，但是按照数据的先后顺序输出；
 &amp;gt; &lt;code&gt;geom = &quot;boxplot&quot;&lt;/code&gt;：输出传统统计学角度的「箱叶图」，以五个&lt;strong&gt;quantile&lt;/strong&gt; 作标记；
 &amp;gt; &lt;code&gt;geom = &quot;jitter&quot;&lt;/code&gt;：类似于「箱叶图」，但是更加突出数据的分散描述，可以使用 &lt;code&gt;alpha = I ()&lt;/code&gt; 来控制分散的透明程度；
 &amp;gt; &lt;code&gt;geom = &quot;histogram&quot;&lt;/code&gt;：柱状图，可以使用参数 &lt;code&gt;binwidth&lt;/code&gt; 来控制间隔大小；
 &amp;gt; &lt;code&gt;geom = &quot;density&quot;&lt;/code&gt;：概率分布图；&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;我们可以通过使用 &lt;code&gt;help(qplot)&lt;/code&gt; 命令来查看其基本的函数结构：&lt;/p&gt;

    &lt;p&gt;qplot(x, y = NULL, …, data, facets = NULL, margins = FALSE,
    geom = “auto”, stat = list(NULL), position = list(NULL), xlim = c(NA,
    NA), ylim = c(NA, NA), log = “”, main = NULL,
    xlab = deparse(substitute(x)), ylab = deparse(substitute(y)), asp = NA)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过使用几个简单的例子，我们想要看看具体是如何操作的。使用的数据是由自带的钻石品质的数据框。 该数据库一共包含了 $10$ 个变量的数据，共计 $53,940$ 次观测值。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;str(diamonds)

## 'data.frame':	53940 obs. of  10 variables:
##  $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...
##  $ cut    : Ord.factor w/ 5 levels &quot;Fair&quot;&amp;lt;&quot;Good&quot;&amp;lt;..: 5 4 2 4 2 3 3 3 1 3 ...
##  $ color  : Ord.factor w/ 7 levels &quot;D&quot;&amp;lt;&quot;E&quot;&amp;lt;&quot;F&quot;&amp;lt;&quot;G&quot;&amp;lt;..: 2 2 2 6 7 7 6 5 2 5 ...
##  $ clarity: Ord.factor w/ 8 levels &quot;I1&quot;&amp;lt;&quot;SI2&quot;&amp;lt;&quot;SI1&quot;&amp;lt;..: 2 3 5 4 2 6 7 3 4 5 ...
##  $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...
##  $ table  : num  55 61 65 58 58 57 57 55 61 61 ...
##  $ price  : int  326 326 327 334 335 336 336 337 337 338 ...
##  $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...
##  $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...
##  $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...

head(diamonds)

##   carat       cut color clarity depth table price    x    y    z
## 1  0.23     Ideal     E     SI2  61.5    55   326 3.95 3.98 2.43
## 2  0.21   Premium     E     SI1  59.8    61   326 3.89 3.84 2.31
## 3  0.23      Good     E     VS1  56.9    65   327 4.05 4.07 2.31
## 4  0.29   Premium     I     VS2  62.4    58   334 4.20 4.23 2.63
## 5  0.31      Good     J     SI2  63.3    58   335 4.34 4.35 2.75
## 6  0.24 Very Good     J    VVS2  62.8    57   336 3.94 3.96 2.48

typeof(diamonds)

## [1] &quot;list&quot;

df &amp;lt;- diamonds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们以钻石的重量（carat）与其相应的价格作为分析入手，自觉立马会告诉我们，一颗同等品质的钻石，其重量越大，则相应的价格就越高，换句话说，价格与重量应该是一个递增函数的关系。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  qplot(x = carat, y = price, data = df)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-3.png&quot; alt=&quot;plot of chunk unnamed-chunk-3&quot; /&gt; 
可以看出，钻石的价格与其重量呈现指数型递增关系的。因此，我们可以对其做一个对数变换，希望得到一个线性的函数关系。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  qplot(x = log(carat), y = log(price), data = df)  ## qplot() 支持对变量函数的输入
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-4.png&quot; alt=&quot;plot of chunk unnamed-chunk-4&quot; /&gt; 
果不其然，这是一个非常完美的线性关系。不过我们也需要警惕图形的「过分拟合」。这是后话，以后有机会再探讨 &lt;/p&gt;

&lt;p&gt;此外，我们可以使用 &lt;code&gt;color&lt;/code&gt; 参数来控制第三个变量（一般是分类变量）来查看钻石的颜色是否也会影响其价格。具体的命令如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  qplot(x = carat, y = price, data = df, color = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-5.png&quot; alt=&quot;plot of chunk unnamed-chunk-5&quot; /&gt; &lt;/p&gt;

&lt;p&gt;同样的，使用 &lt;code&gt;shape&lt;/code&gt; 来查看形状效果&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  qplot(x = carat, y = price, data = df, shape = cut, color = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-6.png&quot; alt=&quot;plot of chunk unnamed-chunk-6&quot; /&gt; &lt;/p&gt;

&lt;p&gt;以上我们介绍了如何控制「修饰」成分命令下面，我们来查看一下如何控制图形输出的「几何」形状。这个主要是通过 &lt;code&gt;geom&lt;/code&gt; 来实现的。&lt;/p&gt;

&lt;p&gt;使用 &lt;code&gt;smooth&lt;/code&gt; 制作拟合。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = carat, y = price, data = df, geom = c(&quot;point&quot;, &quot;smooth&quot;), color = color)

## geom_smooth: method=&quot;auto&quot; and size of largest group is &amp;gt;=1000, so using gam with formula: y ~ s(x, bs = &quot;cs&quot;). Use 'method = x' to change the smoothing method.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-7.png&quot; alt=&quot;plot of chunk unnamed-chunk-7&quot; /&gt; &lt;/p&gt;

&lt;p&gt;这个是「箱叶图」&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = color, y = price, data = df, geom = &quot;boxplot&quot;, color = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-8.png&quot; alt=&quot;plot of chunk unnamed-chunk-8&quot; /&gt; &lt;/p&gt;

&lt;p&gt;再来一个&lt;code&gt;jitter&lt;/code&gt;，同时我们使用参数 &lt;code&gt;alpha = I()&lt;/code&gt; 来控制渐变的效果。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = color, y = price, data = df, geom = &quot;jitter&quot;, alpha = I(1/5))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-9.png&quot; alt=&quot;plot of chunk unnamed-chunk-9&quot; /&gt; &lt;/p&gt;

&lt;p&gt;或者我们想要一个柱状图，则可以使用命令&lt;code&gt;histogram&lt;/code&gt;， 同时使用参数 &lt;code&gt;binwidth&lt;/code&gt; 来控制间距，使用 &lt;code&gt;fill&lt;/code&gt; 来填。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = carat, data = df, geom = &quot;histogram&quot;, binwidth = .05, fill = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-10.png&quot; alt=&quot;plot of chunk unnamed-chunk-10&quot; /&gt; &lt;/p&gt;

&lt;p&gt;或者来一个概率分布图，使用 &lt;code&gt;geom = &quot;density&quot;&lt;/code&gt; 来实现&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = price, data = df, geom = &quot;density&quot;, color = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-11.png&quot; alt=&quot;plot of chunk unnamed-chunk-11&quot; /&gt; &lt;/p&gt;

&lt;p&gt;在实证金融数据分析中，我们经常会遇到形形色色的时间序列数据，对于时间序列数据，我们可以使用 &lt;code&gt;geom = &quot;line&quot;&lt;/code&gt; 或者 &lt;code&gt;geom = &quot;path&quot;&lt;/code&gt; 来表明数据随时间变化的特征。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;df2 &amp;lt;- data.frame(x = seq(1, 100), y = rnorm(100))
qplot(x, y, data = df2, geom=c(&quot;point&quot;,&quot;line&quot;), col = &quot;red&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-12.png&quot; alt=&quot;plot of chunk unnamed-chunk-12&quot; /&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;df3 &amp;lt;- data.frame(x = rnorm(1000), y = rnorm(1000))
qplot(x, y, data = df3, geom=c(&quot;point&quot;,&quot;line&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-131.png&quot; alt=&quot;plot of chunk unnamed-chunk-13&quot; /&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x, y, data = df3, geom=c(&quot;point&quot;,&quot;path&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-132.png&quot; alt=&quot;plot of chunk unnamed-chunk-13&quot; /&gt; 
&lt;code&gt;geom = &quot;line&quot;&lt;/code&gt; 与 &lt;code&gt;geom = &quot;path&quot;&lt;/code&gt; 的差别在于前者使用了时间序列数据是按照一定的观测值顺序排列的，而后者则仅仅是按照数据的呈现方式出现。这个需要我们反思在七十年代的时候美国经济学术界内轰轰烈烈的激战是否存在「Philips Curve」，即政府是否存在可以协调经济通胀率与失业率的良方。原先的数据只是按照数据简单的排序，并没有考虑到收集数据内在的时间先后顺序，从而得出通胀率与失业率可替代的结论。而后来这个经过 Friedman 等人的卓越工作，才揭示了原来政府的这套政策是行不通的，原因在于人们是具有理性预期的，如果真的按照政府的经济政策来实施，则会发生「替换性选择」，最终导致政策无效。这个就是典型的使用数据制作「path」图形的案例。}&lt;/p&gt;

&lt;p&gt;当然，我么也可以使用 &lt;code&gt;facets&lt;/code&gt; 来对不同数据子集分别画图，得到不同的图形对比&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;qplot(x = price, data = df, facets = cut~., geom = &quot;density&quot;, color = color)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-08-04-ggplot2-ru-men-zhi-qplot/unnamed-chunk-14.png&quot; alt=&quot;plot of chunk unnamed-chunk-14&quot; /&gt; &lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/08/04/ggplot2-ru-men-zhi-qplot/</link>
                <guid>http://williamlfang.github.com/cn/2014/08/04/ggplot2-ru-men-zhi-qplot/</guid>
                <pubDate>2014-08-04 00:00:00 +0800</pubDate>
                <category>R</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>使用Quantmod下载沪深股票数据及分析</title>
                <description>&lt;p&gt;今天来到公司上班，本来是想安装软件来查看股市行情以及个股变动情况。由于前几天笔记本不知原因、不明就理的「罢工」，导致我又得重新安装系统和所需的软件。话说回来，其实我们大都习惯了通过证券公司开发的软件来查看昨日行情走势，我们也大都习以为惯了，平时要是真遇到什么小问题，也大都能忍则忍，并不太在乎真实的使用感受。所有的“user-friendly”，大概也就谈谈罢了。&lt;/p&gt;

&lt;p&gt;早上有同事跟我反应说，她在查看股市，尤其是个股情况，看到满屏幕花花绿绿的数据，本来就不怎么清醒的脑袋又开始昏昏欲睡了。我又跟她简短的聊了几句，发现其实她对沪深股市最想要得到的就是综合指数以及个股股价的走势，那些买家成交量、K线图形、最大最小变化数据等等，基本上是冗余的信息，不仅不能增进她对股市行情的整体判断，反而会干扰她的分析。现实中，我们经常遇到过量的数据信息输入往往起不到辅助决策的作用。&lt;/p&gt;

&lt;p&gt;针对这位同事反应的问题。我大概有几点思考的。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先，我们的交易软件其实可以根据不同客户的信息异质性需求，为他们提供「私人定制」的信息套件。比如有些客户可能会比较习惯寻找共同行业版块中几个典型企业作为分析的着手，根据对行业里各个上市公司的总体分析，能够获得对个股走势的宏观判断与整体认识。再比如，有些客户可能只是想知道在过去的几个周期里面个股股价的总体趋势，他不想要看到诸如成交量、买卖双方、K线、蜡烛图等等。那么，我们在做客户服务时，其实可以从客户需求的角度来思考，并且从产品设计、软件架构、服务流程等一一入手，做到「能用、有用、实用、好用」的全新服务层次。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接着上面的一点，我发现自己所在的金顾部门需要改进的几个方面。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;首先，我们需要一定的技能能力，这包括但不限于专业理论知识储备、对市场实务体系的深刻了解、对产品特性的独到把握、具备一定等级程度的量化分析技能、掌握至少一个以上的编程语言。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;说到专业，毋庸置疑，我们需要对现代金融理论的发展脉络及其发展前沿具有扎实的理论功力。现代金融的发展包括资产定价（Asset Pricing）与公司金融（Corporate Finance）两大模块。从金顾的职能角色上看，我们至少需要知道目前有哪些比较成功的可用于理解股票市场波动与演变的理论模型，比如 CAPM、C-CAPM、APT 等，清楚的知道公司的财务分析报表如何为分析上市公司未来股价提供有价值的信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;而关于量化分析的方法，我个人比较推荐大家能够学习一些比较实用的编程语言，比如善于处理数据统计分析与图形化展示的 R 语言，专注矩阵分析与模拟的 Matlab 系统，能用用于处理大量互联网数据的 Python 等。尤其是 R，既是一种编译环境，也是一种数据编程语言，是免费开源项目，网上具有非常丰富的软件包可供免费下载使用。可以说，R 是目前分析数据与图形绘制的最好的编程语言，没有之一。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天的主题是关于如何使用 R 中的一款优秀的有些「过分」的开源软件包，&lt;strong&gt;quantmod&lt;/strong&gt;。quantmod包：Quantitative Financial Modelling Framework。其目的在于为量化交易者提供一个进行建模的平台，目前的主要功能是获取交易数据进行处理并绘制交易图形。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先，我们先去 Yahoo Finance 上面找到不同指数或者个股对应的股票名称或者股票代码。比如，我们现在想要看看上证指数的基本情况，那么，其所对应的名称是 「&lt;strong&gt;^ SSEC&lt;/strong&gt;」。或者是深圳 A 股，对应的代码是「&lt;strong&gt;^ SZSA&lt;/strong&gt;」对于股票代码，这里需要区分沪市和深市的情况，在相应的代码后面添加「&lt;strong&gt;.ss&lt;/strong&gt;」或者是「&lt;strong&gt;.sz&lt;/strong&gt;」。比如，对于在沪市交易的浦发银行，其股票代码为 &lt;strong&gt;600000&lt;/strong&gt;，则可以取 &lt;strong&gt;600000.ss&lt;/strong&gt;。比如，我们查看在深圳上市的「招商地产」，其股票代码在深市为 &lt;strong&gt;000024&lt;/strong&gt;，则可以取 &lt;strong&gt;000024.sz&lt;/strong&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其次，我们使用函数 &lt;strong&gt;getSymbols()&lt;/strong&gt; 来获取需要运用于后续分析的金融数据。则可以使用命令&lt;/p&gt;

    &lt;p&gt;上海综合 &amp;lt;-getSymbols(“^SSEC”,from = “2004-01-01”, ## 上海综合指数
             to = Sys.Date(),src = “yahoo”,auto.assign=FALSE)
   chartSeries(上海综合, theme = theme.black)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/上海综合.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/上海综合.png&quot; alt=&quot;plot of chunk 上海综合&quot; /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  深圳A股 &amp;lt;-getSymbols(&quot;^SZSA&quot;,from = &quot;2014-01-01&quot;, 
              to = Sys.Date(),src = &quot;yahoo&quot;,auto.assign=FALSE)
  chartSeries(深圳A股, theme = theme.black, TA = &quot;addEnvelop()&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/深圳A股.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/深圳A股.png&quot; alt=&quot;plot of chunk 深圳A股&quot; /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;对于个股，我们也举一个简单的例子。比如招商地产，000024.sz&lt;/p&gt;

    &lt;p&gt;招商地产 &amp;lt;- getSymbols(“000024.sz”, from = “2000-01-01”, ## 招商地产
             to = Sys.Date(),src = “yahoo”,auto.assign=FALSE)
   chartSeries(招商地产, theme = theme.black)
   candleChart(招商地产, theme = theme.black,
               TA = “addVo(); addSMA(); addEnvelope();
               addMACD(); addMomentum(); addROC()”)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/招商地产.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/招商地产.png&quot; alt=&quot;plot of chunk 深圳A股&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;通常，如果有些客户可能会对技术分析比较喜欢，想要在图形中使用一些基本的技术分析指标。通常，这个可以使用 &lt;strong&gt;addXXX()&lt;/strong&gt; 来实现。比如添加包螺线，可以使用 &lt;strong&gt;addEnvelope()&lt;/strong&gt;。&lt;/p&gt;

    &lt;p&gt;神州泰越 &amp;lt;- getSymbols(“300002.sz”, from = “2013-01-01”, 
             to = Sys.Date(),src = “yahoo”,auto.assign=FALSE)
   chartSeries(神州泰越, theme = theme.white,
               TA = “addVo(); addSMA(); addEnvelope();
               addMACD(); addMomentum(); addROC()”)
   # addLines(h=100, col = “white”) ## mean(神州泰越[,1])
   # addLines(h=200, col = “white”) ## mean(神州泰越[,1])
   addLines(v = which(神州泰越[,4] == max(神州泰越[,4])), 
             col = “gray”)             &lt;br /&gt;
   #addLines(v = which(神州泰越[“2014-01-01/”,4] == max(神州泰越[“2014-01-01/”,4])), col = “blue”)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/神州泰越.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-07-09-shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/神州泰越.png&quot; alt=&quot;plot of chunk 神州泰越&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/07/09/shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/</link>
                <guid>http://williamlfang.github.com/cn/2014/07/09/shi-yong-quantmod-xia-zai-hu-shen-gu-piao-shu-ju-ji-fen-xi/</guid>
                <pubDate>2014-07-09 00:00:00 +0800</pubDate>
                <category>工作</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>简历技术派</title>
                <description>&lt;p&gt;找工作至少要准备两种以上格式的简历，注意，这里值得不是中文或者英文的，而是具体的简历呈现的格式。&lt;/p&gt;

&lt;p&gt;我非常不推荐使用 Word 来编辑简历，主要是因为&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;MS 经常对 office 进行更新，动不动的我们就得升级，可能你电脑的 office 已经升级到了 2013 年，可是你老板公司却只能使用 XP 的，这样HR可能就无法查收使用 word 制作的简历了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最要命的，我们经常发现本来已经调好各种格式 的word 简历，却在另外的一台电脑里莫名其妙的出现格式错误，与原来设计的完全不同，甚至有时还会出现乱码的情况。所以，找工作，远离 MS 啊。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;简历的两种境界&lt;/h2&gt;

&lt;p&gt;我这里推荐使用两种文件格式来制作简历。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首选当然是 LaTeX 啦。这个可是说是制作简历的神器，页面非常的美观，而且最后得到的 pdf 格式的文件通杀所有系统，能够完美无差的在不同的电脑、系统、环境中查看。再者，使用 LaTeX 本身也是一件拉风的事情，当 HR 在经过一整天的 Word 那丑陋而又抽风的格调后，相信第一眼看到完美的 pdf 会神清气爽的。（当然，简历最重要的要有「料」，如果你的能力与阅历本来就不甚了了，那可能真的埋踏了神器）。&lt;/p&gt;

    &lt;p&gt;前段时间我使用 LaTeX 制作了一个带有时间标签的&lt;a href=&quot;http://williamlfang.qiniudn.com/cv/william_cn.pdf&quot;&gt;简历&lt;/a&gt;，里面可以对工作经历做时间上的排序，方便 HR 查看。颜色可以按照个人偏好选择。我使用的是金桔色，代表着「青春与活力」，希望自己在将来的工作中也「满腹热血」而非「满腹牢骚」，纵然「满腹经论」，好歹也得努力工作让家人「满脸幸福」。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其次，我们可以尝试制作一个应用 Html5 技术的网页版简历，生成的文档可是直接加入到 Email 正文。现在好多公司由于保密问题，通常不接受带附件的简历，那么，有用一款可以直接在邮件中文里显示的简历页面，将使你受益颇多。而且，现在的 Html5 技术已经非常成熟，可以制作一个异常漂亮的简历页面，里面还可以提供相应的链接，使得单页的简历在内容上得到扩展，增加你的筹码。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;html5-&quot;&gt;Html5 制作简历&lt;/h2&gt;

&lt;p&gt;我原来本是打算直接用先前制作好的 pdf 格式来转成 Html 代码（这个可以使用 &lt;strong&gt;pdf2htmlEX&lt;/strong&gt; 来实现，详见我的帖子，&lt;a href=&quot;http://williamlfang.github.io/cn/2014/03/30/pdf-zhuan-html-de-fang-fa/&quot;&gt;PDF转HTML的方法&lt;/a&gt;）。可是最后发现， 如果是直接将代码拷贝到邮件正文，根本就不可能被编译成 html（我在 Linux 系统下使用 Thunderbird）。因此，也就死了这条贪图便捷的心。还是乖乖的动手写代码吧。&lt;/p&gt;

&lt;p&gt;思路还是蛮简单的，就是将 Html5 的代码全部放在一个邮件的文档里面。如果有外部链接，如图片、文件、音频等，这可以使用超链接的方式插入。全部代码包括几部分&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;表头部分：用于显示网页标题。&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  &amp;lt;!DOCTYPE html&amp;gt;
  &amp;lt;!--[if lt IE 7]&amp;gt;      &amp;lt;html class=&quot;no-js lt-ie9 lt-ie8 lt-ie7&quot;&amp;gt; &amp;lt;![endif]--&amp;gt;
  &amp;lt;!--[if IE 7]&amp;gt;         &amp;lt;html class=&quot;no-js lt-ie9 lt-ie8&quot;&amp;gt; &amp;lt;![endif]--&amp;gt;
  &amp;lt;!--[if IE 8]&amp;gt;         &amp;lt;html class=&quot;no-js lt-ie9&quot;&amp;gt; &amp;lt;![endif]--&amp;gt;
  &amp;lt;!--[if gt IE 8]&amp;gt;&amp;lt;!--&amp;gt; 
  &amp;lt;html class=&quot;no-js&quot;&amp;gt; &amp;lt;!--&amp;lt;![endif]--&amp;gt;
  &amp;lt;head&amp;gt;
  &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;
  &amp;lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot;&amp;gt;
  &amp;lt;title&amp;gt;William · 方 莲&amp;lt;/title&amp;gt;  	&amp;lt;!-- &amp;lt;title&amp;gt;My sweet one page CV&amp;lt;/title&amp;gt; --&amp;gt;
  &amp;lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;css&lt;/strong&gt;：使用 &lt;strong&gt;&lt;style type=&quot;text/css&quot;&gt; &lt;/style&gt;&lt;/strong&gt; 引入，主要控制页面格式、相应方式、动画顺序、字体、颜色等。这部分往往是比较难的部分，可以找网上的帖子来做参考，省去一笔不必要的时间浪费。&lt;/p&gt;

    &lt;p&gt;比如，我通常会选择在简历中添加 Google+、Facebook、新浪微薄等链接，方便 HR 直接跳转到更多的咨询。这点在传统的纸质简历中是难以想象到的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex01.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex01.png&quot; alt=&quot;cvex01&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;再举个例子，我使用带有时间轴的标签，这个可以通过一下命令完成：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  .time {
  width: 20%;
  display: inline;
  float: left;
  text-align: right;
  width: 70px;
  margin-right: 20px;
  font-size: 15px;      /* -------------   time font size --------------------*/
  font-weight: bold;
  }
  
  .timeline {
  width: 80%;
  display: inline-block;
  }
  .timeline .element {
  margin: 0;
  padding: 0 0 10px 20px;
  border-left: 4px solid #4ec5e0;   /* 时间轴的宽度， 颜色: border-left: 4px solid #f1f1f1;   */
  -webkit-transition: 1s ease;
  -moz-transition: 1s ease;
  -o-transition: 1s ease;
  transition: 1s ease;
  }
  /*
  .timeline .element h3 {
  display: inline-block;
  }
  */
  .timeline .element:hover {
  border-left: 4px solid #c2d9a1;
  cursor: pointer;
  }
  .timeline .element:hover {
  -webkit-transition: 1s ease;
  -moz-transition: 1s ease;
  -o-transition: 1s ease;
  transition: 1s ease;
  }
  .timeline .element::before {
   content: &quot; &quot;;
  color: white;
  background: white;
  display: inline-block;
  margin-left: -29px;
  position: absolute;
  padding: 0;
  border: 1px solid rgba(0, 0, 0, 0.1);
  height: 12px;
  width: 12px;
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  -ms-border-radius: 6px;
  -o-border-radius: 6px;
  border-radius: 6px;
  }
  .timeline .element ul {
  list-style-type: square;
  padding-left: 15px;
  margin: 0;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section-1&quot;&gt;快来快来看一看&lt;/h2&gt;

&lt;p&gt;得到的显示效果如下&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex02.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex02.png&quot; alt=&quot;cvex02&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这样，我们在给 HR 发送简历的时候，就可以使用 Thunderbird 的「插入 Html 」功能来实现网页版本的简历申请了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex03.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex03.png&quot; alt=&quot;cvex03&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex04.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex04.png&quot; alt=&quot;cvex04&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex05.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-31-jian-li-ji-shu-pai/cvex05.png&quot; alt=&quot;cvex05&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/03/31/jian-li-ji-shu-pai/</link>
                <guid>http://williamlfang.github.com/cn/2014/03/31/jian-li-ji-shu-pai/</guid>
                <pubDate>2014-03-31 00:00:00 +0800</pubDate>
                <category>Tech</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>PDF转HTML的方法</title>
                <description>&lt;p&gt;今天本来是想要给公司人力资源部发送简历，顺便做了一些调改，是以附件的PDF格式呈送的。可是那边的却通知我说公司有规定，不能在邮件里直接打开附件（有时甚至会直接被视为病毒删除掉）。因此，我只好另寻方法，既能够满足我使用&lt;em&gt;LaTeX&lt;/em&gt;制作简历的极客范，又能符合公司的客观规定。&lt;/p&gt;

&lt;p&gt;一来我现在使用的系统是&lt;strong&gt;Linux Mint&lt;/strong&gt;，不存在说需要使用&lt;em&gt;Word&lt;/em&gt;制作简历的可能性，而且如果真的制作了，不也是一样需要以附件形式发送嘛——如果你非得使用Word制作简历，那么到时候就只能以「复制、粘贴」的方法写到邮件正文中。可是如此以来，所有的格式都消失了，而且由于&lt;strong&gt;Email&lt;/strong&gt;采用&lt;em&gt;Markup&lt;/em&gt;格式，到时候Word复制粘贴出来的文本几乎无法被正常显示，更不要说让挑剔的人力部来阅读邮件了。二者，我前面也提到了，我极度使用一切与&lt;strong&gt;TeX&lt;/strong&gt;相关的技术，这包括在&lt;strong&gt;R&lt;/strong&gt;中使用&lt;em&gt;knitr&lt;/em&gt;，在&lt;em&gt;Html&lt;/em&gt;网页中显示由&lt;strong&gt;LaTeX&lt;/strong&gt;生成的&lt;em&gt;pdf&lt;/em&gt;文档，使用&lt;em&gt;Pandoc&lt;/em&gt;转化&lt;em&gt;markdown&lt;/em&gt;为pdf输出等等。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;section&quot;&gt;解决思路&lt;/h2&gt;

&lt;p&gt;不怕有问题，我们需要相信强大的黑客社区与开源社区。针对我今天遇到的这个问题，其实已经有人早早就提出来了，而且还写了一个小程序来实现。&lt;/p&gt;

&lt;p&gt;其实想法很简单：既然不让使用附件传送PDF格式的简历，那么，我们现在换一种思路，将其转化成&lt;em&gt;markup&lt;/em&gt;语言，然后在邮件正文就能够显示出来符合原来文件排版的简历内容了。这个问题放大了看，其实就是如何在浏览器中显示PDF文档。原来的解决思路是通过浏览器自带的阅读器来打开该格式的文档，比如Chrome等。然而，这对系统运行难免带来压力，有些时候Chrome打开一个PDF文件非常的卡，非常的慢。&lt;/p&gt;

&lt;p&gt;由&lt;a href=&quot;http://www.cse.ust.hk/~luwang/&quot;&gt;Lu Wang&lt;/a&gt;开发的这个&lt;a href=&quot;https://github.com/coolwanglu/pdf2htmlEX&quot;&gt;&lt;strong&gt;pdf2htmlEX&lt;/strong&gt;&lt;/a&gt;正好解决了这个问题，实现了将PDF文件&lt;strong&gt;精确、无差&lt;/strong&gt;的转化为相应的HTML文件，整个过程支持&lt;strong&gt;LaTeX&lt;/strong&gt;语法，尤其适用与包含了&lt;strong&gt;LaTeX&lt;/strong&gt;数学公式的文档。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首先，我们经过&lt;strong&gt;LaTeX&lt;/strong&gt;编译后得到了一个pdf简历。这里面既可以包括文字、图形、照片，又可以包括诸如数学公式、特殊符号在内的各种格式。&lt;/li&gt;
  &lt;li&gt;然后，使用&lt;em&gt;pdf2htmlEX&lt;/em&gt;，实现「无缝对接」，得到了一个html文件。&lt;/li&gt;
  &lt;li&gt;之后，我们便可以像对待其他html格式文件一样的，乐趣所需。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;安装方法&lt;/h2&gt;

&lt;p&gt;在Linux中有两种安装方法，一种是直接在终端输入命令语句安装，另一种是自己按照各种依赖包一路安装到底。前者简单适用，后者过于复杂。我这里介绍如何使用前一种方法安装&lt;strong&gt;pdf2htmlEX&lt;/strong&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-add-repository ppa:coolwanglu/pdf2htmlex
sudo apt-get update
sudo apt-get install pdf2htmlex
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装成功后，我们可以查看一下相应的版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo pdfhtmlex --version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同时，可以查看使用手册&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pdf2htmlEX –help
man pdf2htmlEX
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;/cn/assets/images/r-figures/2014-03-30-pdf-zhuan-html-de-fang-fa/pdf2htmlEX01.png&quot;&gt;&lt;img src=&quot;/cn/assets/images/r-figures/2014-03-30-pdf-zhuan-html-de-fang-fa/pdf2htmlEX01.png&quot; alt=&quot;pdf2htmlEX01&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;使用&lt;/h2&gt;

&lt;p&gt;现在，「万事具备」，只需要一个命令就可以实现：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pdf2htmlEX “test.pdf”
&lt;/code&gt;&lt;/pre&gt;

<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/03/30/pdf-zhuan-html-de-fang-fa/</link>
                <guid>http://williamlfang.github.com/cn/2014/03/30/pdf-zhuan-html-de-fang-fa/</guid>
                <pubDate>2014-03-30 00:00:00 +0800</pubDate>
                <category>Tech</category>
　             　<author>ccbikai</author>
        </item>

        <item>
                <title>Page 183 184</title>
                <description>&lt;p&gt;假定短期利率在风险中性测度下（等价鞅测度）服从以下随机过程
$$
\begin{align}
 dr_t &amp;amp;= \theta dt + \sigma dW_t &lt;br /&gt;
 \Rightarrow
 \int&lt;em&gt;{s}^{t} dr_t &amp;amp;= \int&lt;/em&gt;{s}^{t} \theta dt + \int&lt;em&gt;{s}^{t}  \sigma dW_t &lt;br /&gt;
  \Rightarrow
  r(t) &amp;amp;= r(s) + \theta (t-s) + \sigma  \int&lt;/em&gt;{s}^{t}  dW_t &lt;br /&gt;
\end{align}
$$&lt;/p&gt;

&lt;p&gt;则在同样的等价鞅测度下，零息票债券的价格为
$$
\begin{align}
 P(t,T) &amp;amp;= E^{Q}\bigg[ e^{ - \int_{t}^{T} r(u) du } \bigg| \mathcal{F}_t \bigg]
\end{align}
$$&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;同时，我们令 $X(t,T)$ 为一个有关短期利率的线性关系，我们在前面提过，短期利率 $\boxed{r(t)  = \cdots + \sigma  \int&lt;em&gt;{s}^{t}  dW_t}$ 是一个服从正太分布的变量（从布朗运动的正太分布特征得到），因而 $X(t,T)$ 也是一个服从正太分布的随机变量。
$$
\begin{align*}
 X(t,T) &amp;amp;= \int&lt;/em&gt;{t}^{T} r(u) du = \int&lt;em&gt;{t}^{T} r(t) du + \int&lt;/em&gt;{t}^{T} \theta (u-t) du + \int&lt;em&gt;{t}^{T}  \sigma du \int&lt;/em&gt;{t}^{u}  dW&lt;em&gt;\epsilon &lt;br /&gt;
 &amp;amp;= r(t)(T-t) + \frac{\theta}{2}(T-t)^2 + \int&lt;/em&gt;{t}^{T}  \sigma du \int&lt;em&gt;{t}^{u}  dW&lt;/em&gt;\epsilon &lt;br /&gt;
 \Rightarrow
 E\bigg[ X(t,T) \bigg| \mathcal{F}&lt;em&gt;t \bigg]
 &amp;amp;= r(t)(T-t) + \frac{\theta}{2}(T-t)^2 + \int&lt;/em&gt;{t}^{T}  \sigma du \underbrace{ E\bigg[  \int&lt;em&gt;{t}^{u}  dW&lt;/em&gt;\epsilon}&lt;em&gt;{0}  \bigg] &lt;br /&gt;
 &amp;amp;= r(t)(T-t) + \frac{\theta}{2}(T-t)^2  &lt;br /&gt;
 \Rightarrow
 Var\bigg[ X(t,T) \bigg| \mathcal{F}_t \bigg]
 &amp;amp;= \sigma^2 E\bigg[ \int&lt;/em&gt;{t}^{T} du 
      \bigg( \int&lt;em&gt;{t}^{u} dW&lt;/em&gt;{\epsilon} \cdot   \int&lt;em&gt;{t}^{v} dW&lt;/em&gt;{\epsilon}  \bigg) 
      \int&lt;em&gt;{t}^{T} dv \bigg| \mathcal{F}_t \bigg] &lt;br /&gt;
  &amp;amp;= \sigma^2 \int&lt;/em&gt;{t}^{T} du \int&lt;em&gt;{t}^{\min{u,v}} d\epsilon  \int&lt;/em&gt;{t}^{T} dv &lt;br /&gt;
  &amp;amp;= 2 \sigma^2 \int&lt;em&gt;{t}^{v} (u-t) du \int&lt;/em&gt;{t}^{T} dv &lt;br /&gt;
  &amp;amp;= 2 \sigma^2 \int&lt;em&gt;{t}^{T} \bigg( \frac{1}{2} u^2 - u t \bigg)\bigg|_t^v dv  &lt;br /&gt;
  &amp;amp;= 2 \sigma^2 \int&lt;/em&gt;{t}^{T} \bigg( \frac{1}{2} v^2 - vt + \frac{1}{2} t^2 \bigg) dv &lt;br /&gt;
  &amp;amp;= \sigma^2 \int_{t}^{T} (v-t)^2 dv &lt;br /&gt;
  &amp;amp;= \frac{\sigma^2}{3} (v-t)^3\bigg|_t^T &lt;br /&gt;
  &amp;amp;= \frac{\sigma^2}{3} (T-t)^3 &lt;br /&gt;
  \Rightarrow
  X(t,T) &amp;amp;\sim \mathcal{N}\bigg( r(t)(T-t) + \frac{\theta}{2}(T-t)^2, \frac{\sigma^2}{3} (T-t)^3 \bigg)
\end{align*}
$$&lt;/p&gt;

&lt;p&gt;我们可以利用正太分布函数的矩阵生成函数来推导债券价格的公式。
$$
\begin{align}
 P(t,T) &amp;amp;= E^{Q}\bigg[ e^{ - X(t,T) } \bigg| \mathcal{F}_t \bigg] &lt;br /&gt;
 &amp;amp;= e^{ -\mu_X + \frac{1}{2} \sigma_X^2} &lt;br /&gt;
 &amp;amp;= e^{ -r(t)(T-t) - \frac{\theta}{2}(T-t)^2 + \frac{\sigma^2}{6} (T-t)^3 } &lt;br /&gt;
 &amp;amp;= A(t,T) e^{ -B(t,T) r(t) } &lt;br /&gt;
 A(t,T)  &amp;amp;= e^{ - \frac{\theta}{2}(T-t)^2 + \frac{\sigma^2}{6} (T-t)^3  } &lt;br /&gt;
 B(t,T)  &amp;amp;= (T-t)
\end{align}
$$&lt;/p&gt;

&lt;p&gt;下面我们来推导远期利率的公式。&lt;/p&gt;

&lt;p&gt;$$
\begin{align}
 f(t,T) &amp;amp;= -\frac{\partial \ln P(t,T)}{ \partial T} &lt;br /&gt;
 &amp;amp;= r_t + \theta(T-t) - \frac{\sigma^2}{2} (T-t)^2
\end{align}
$$
根据 &lt;strong&gt;Ito formula&lt;/strong&gt;，有
$$
\begin{align}
 df(t,T) &amp;amp;= \underbrace{f’&lt;em&gt;t}&lt;/em&gt;{-\theta + \sigma^2(T-t)} dt + \underbrace{f’&lt;em&gt;{r}}&lt;/em&gt;{1} dr_t  + \frac{1}{2} \underbrace{f’‘&lt;em&gt;{rr}}&lt;/em&gt;{0} dr_tdr_t  &lt;br /&gt;
 &amp;amp;= \bigg[ -\theta + \sigma^2(T-t) \bigg] dt + \bigg( \theta dt + \sigma dW_t \bigg) &lt;br /&gt;
 &amp;amp;= \boxed{
   \sigma^2(T-t) dt +  \sigma dW_t
 }
\end{align}
$$&lt;/p&gt;

&lt;p&gt;从以上关系可以看到，远期利率的漂移项依赖于短期利率的瞬时波动项，即$\mu_{f(t,T)} = \sigma^2(T-t)$，这个是典型的具有 &lt;strong&gt;HJM&lt;/strong&gt; 模型特征。我们将在下一回细解。&lt;/p&gt;
<img src="http://img.tongji.linezing.com/3379661/tongji.gif" border="0" /></description>
                <link>http://williamlfang.github.com/cn/2014/03/27/page-183-184/</link>
                <guid>http://williamlfang.github.com/cn/2014/03/27/page-183-184/</guid>
                <pubDate>2014-03-27 00:00:00 +0800</pubDate>
                <category>Finance</category>
　             　<author>ccbikai</author>
        </item>


</channel>
</rss>
