slope <- ts(data[,42],start=c(1970, 1), end=c(2000, 12), frequency=12)
curvature <- ts(data[,43],start=c(1970, 1), end=c(2000, 12), frequency=12)
head(level)
head(slope)
head(curvature)
yld.tilde <- ts(yld.tilde,start=c(1970, 1), end=c(2000, 12), frequency=12)
level.fit <- ts(yld.tilde[,n.maturity],start=c(1970, 1), end=c(2000, 12), frequency=12)
slope.fit <- ts(-Beta[,1],start=c(1970, 1), end=c(2000, 12), frequency=12)
curvature.fit <- ts(-Beta[,2],start=c(1970, 1), end=c(2000, 12), frequency=12)
##################
##################
par(mfrow=c(3,1))
plot.ts(.5*level, ylab = "", xlab="", main="Level",pch = 19, col = "blue", lwd = 3)
lines(level.fit, lty = "dashed", lwd = 3, col = "red")
plot.ts(slope,ylim = c(-10, 5), ylab = "", xlab="", main="Slope" ,pch = 19, col = "blue", lwd = 3)
lines(3.2+slope.fit, lty = "dashed", lwd = 3, col = "red")
plot.ts(5 * curvature, ylim = c(-10, 20),  ylab = "", xlab="", main="Curvature" ,pch = 19, col = "blue", lwd = 3)
lines( -25+ -1 * curvature.fit, lty = "dashed", lwd = 3, col = "red")
##################
##################
par(mfrow=c(1,1))
plot(yld.tilde[,1],col=1, ylim=c(-3,7), ylab = "Yiled(%)", lwd=1)
for (i in 2:(n.maturity)){
lines(yld.tilde[,i], col = i, lwd=1)
}
lines(.5*level, ylab = "Level", xlab="",lwd=4, col = "blue")
lines(level.fit, lty = "dashed", lwd = 5, col = "red")
##################plot(maturi
##################
par(mfrow=c(3,1))
plot.ts(.5*level, main="Short Term",ylab = "Level", xlab="",col = "blue",lwd=4)
lines(3+yld.tilde[,1], lty = "dotted", lwd = 3, col = "gray")
lines(3+yld.tilde[,2], lty = "dotdash", lwd = 3, col = "brown")
lines(3+yld.tilde[,3], lty = "dashed", lwd = 3, col = "red")
plot.ts(.5*level, main="Medium Term", ylab = "Level", xlab="",col = "blue",lwd=4)
lines(5+yld.tilde[,9], lty = "dotted", lwd = 3, col = "gray")
lines(5+yld.tilde[,10], lty = "dotdash", lwd = 3, col = "brown")
lines(5+yld.tilde[,11], lty = "dashed", lwd = 3, col = "red")
plot.ts(.5*level, main="Long Term", ylab = "Level", xlab="",col = "blue",lwd=4)
lines(yld.tilde[,15], lty = "dotted", lwd = 3, col = "gray")
lines(yld.tilde[,16], lty = "dotdash", lwd = 3, col = "brown")
lines(yld.tilde[,17], lty = "dashed", lwd = 3, col = "red")
##################
##################
par(mfrow=c(2,2))
plot(tau, yld[25,],pch=19,main="上升的收益率曲线：01/31/1972",ylab="Yield(%)",xlab="Maturity")
plot(tau, yld[347,],pch=19,main="持平的收益率曲线：11/31/1998",ylab="Yield(%)",xlab="Maturity")
plot(tau, yld[138,],pch=19,main="下降的收益率曲线：06/30/1981",ylab="Yield(%)",xlab="Maturity")
plot(tau, yld[364,],pch=19,main="马鞍型的收益率曲线：04/28/2000",ylab="Yield(%)",xlab="Maturity")
##################
par(mfrow=c(2,2))
p1 <- ggplot(data.frame(tau, yld[25,]),aes(tau, yld[25,]),geom_point())
p2 <- ggplot(data.frame(tau, yld[25,]),aes(tau, yld[25,]),geom_point())
p <- ggplot(tau, yld[347,],pch=19,main="持平的收益率曲线：11/31/1998",ylab="Yield(%)",xlab="Maturity")
p <- ggplot(tau, yld[138,],pch=19,main="下降的收益率曲线：06/30/1981",ylab="Yield(%)",xlab="Maturity")
p <- ggplot(tau, yld[364,],pch=19,main="马鞍型的收益率曲线：04/28/2000",ylab="Yield(%)",xlab="Maturity")
##################
##################
par(mfrow=c(1,1))
yld.aver <- rep(0,n.maturity)
yld.fit.aver <- rep(0,n.maturity)
for (i in 1:n.maturity){
yld.aver[i] <- mean(yld[1:182,i])
yld.fit.aver[i] <- mean(yld.fit[1:182,i])
}
plot(maturity, yld.aver, ylim=c(7.8,9),xlab = "Maturity(months)", ylab = "Yield", main="Average Yield Curve: Actual vs Fitted", cex.lab=0.8, cex.axis=0.7, cex.main=1.0,pch = 19, col = "blue", lwd = 3)
lines(maturity, yld.fit.aver, lty = "dashed", lwd = 3, col = "red")
##################
##################
summary(Beta)
beta2 <- Beta[,1]
##################
w
head(my)
my
data <- data[1:300,]    ## 1970,01 -- 1989,12
n.data <- nrow(data)                  ## number of data
## maturity <- c(1, 3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
maturity <- c(3,6, 9, 12, 15, 18, 21, 24, 30, 36,
48, 60, 72, 84, 96, 108, 120)
n.maturity <- length(maturity)                  ## number of maturity
lambda <- 0.0609   ## As in Diebold-Li(2006)
#######################################
yld <- as.matrix(data[,3:(3+n.maturity - 1)])
n.my <- 3+n.maturity - 1
my <- as.matrix(data[, (n.my+5):(n.my+21)])
head(yld)
head(my)
M <- matrix(, nrow = n.maturity, ncol = 2)
rownames(M) <- c("3m", "6m", "9m", "12m", "15m", "18m", "21m", "24m", "30m", "36m",
"48m", "60m", "72m", "84m", "96m", "108m", "120m")
for (i in 1:n.maturity){
M[i,1] = ( 1 - exp( - lambda * maturity[i]) ) / ( lambda * maturity[i] )
M[i,2] = ( 1 - exp( - lambda * maturity[i]) ) / ( lambda * maturity[i] ) - exp( - lambda * maturity[i])
}
my
tail(my)
data <- data[1:372,]    ## 1970,01 -- 1989,12
n.data <- nrow(data)                  ## number of data
## maturity <- c(1, 3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
maturity <- c(3,6, 9, 12, 15, 18, 21, 24, 30, 36,
48, 60, 72, 84, 96, 108, 120)
n.maturity <- length(maturity)                  ## number of maturity
lambda <- 0.0609   ## As in Diebold-Li(2006)
#######################################
yld <- as.matrix(data[,3:(3+n.maturity - 1)])
n.my <- 3+n.maturity - 1
my <- as.matrix(data[, (n.my+5):(n.my+21)])
head(yld)
head(my)
my
yld
data
setwd("/home/william/桌面/Thesis_XeTex/")
##--------------------------
##-------- Time Series: packages
# install.packages(c("MASS","strucchange","zoo","sandwich","urca","lmtest","vars"))
library(MASS)
library(strucchange)
library(zoo)
library(sandwich)
library(urca)
library(lmtest)
library(MASS)
library(vars)
library(stargazer)
##--------------------------
par(cex.lab=0.9, cex.axis=0.9, cex.main=1.0)
data <- read.table("data", header = TRUE)
head(data)
tail(data)
data <- data[1:372,]    ## 1970,01 -- 1989,12
data
tail(data)
n.data <- nrow(data)                  ## number of data
maturity <- c(3,6, 9, 12, 15, 18, 21, 24, 30, 36,
48, 60, 72, 84, 96, 108, 120)
n.maturity <- length(maturity)                  ## number of maturity
lambda <- 0.0609   ## As in Diebold-Li(2006)
yld <- as.matrix(data[,3:(3+n.maturity - 1)])
yld
my <- as.matrix(data[, (n.my+5):(n.my+21)])
my
setwd("/home/william/桌面/Thesis_XeTex/")
##--------------------------
##-------- Time Series: packages
# install.packages(c("MASS","strucchange","zoo","sandwich","urca","lmtest","vars"))
library(MASS)
library(strucchange)
library(zoo)
library(sandwich)
library(urca)
library(lmtest)
library(MASS)
library(vars)
library(stargazer)
##--------------------------
par(cex.lab=0.9, cex.axis=0.9, cex.main=1.0)
data <- read.table("data", header = TRUE)
head(data)
data <- data[1:300,]    ## 1970,01 -- 1989,12
n.data <- nrow(data)                  ## number of data
## maturity <- c(1, 3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
data
tail(data)
yld <- as.matrix(data[,3:(3+n.maturity - 1)])
n.my <- 3+n.maturity - 1
my <- as.matrix(data[, (n.my+5):(n.my+21)])
my
data.all <- data[1:372]
data.all <- data[1:372,]
data.all
tail(data.all)
setwd("/home/william/桌面/Thesis_XeTex/")
##--------------------------
##-------- Time Series: packages
# install.packages(c("MASS","strucchange","zoo","sandwich","urca","lmtest","vars"))
library(MASS)
library(strucchange)
library(zoo)
library(sandwich)
library(urca)
library(lmtest)
library(MASS)
library(vars)
library(stargazer)
##--------------------------
par(cex.lab=0.9, cex.axis=0.9, cex.main=1.0)
data <- read.table("data", header = TRUE)
head(data)
data.all <- data[1:372,]
data <- data[1:300,]    ## 1970,01 -- 1989,12
n.data <- nrow(data)                  ## number of data
tail(data)
tail(data.all)
my.pred <- my[301:372,24:20]
my.pred <- my[301:372,24:40]
my.pred <- my[301:372,22:40]
my.pred <- my[301:372,22:39]
my.pred <- data.all[301:372,22:39]
my.pred
head(my.pred)
my.pred <- data.all[301:372,24:40]
head(my.pred)
w
M
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <= w[1] * my.pred[i,1] + M[1,1] * beta2.predict[i] + M[1,2] * beta3.predict[i]
}
yld.pred.3m
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <= w[1] * my.pred[i,1] + M[1,1] * beta2.predict[i] + M[1,2] * beta3.predict[i]
}
yld.pred.3m
## vars.R
setwd("/home/william/桌面/Thesis_XeTex/")
##--------------------------
##-------- Time Series: packages
# install.packages(c("MASS","strucchange","zoo","sandwich","urca","lmtest","vars"))
library(MASS)
library(strucchange)
library(zoo)
library(sandwich)
library(urca)
library(lmtest)
library(MASS)
library(vars)
library(stargazer)
##--------------------------
par(cex.lab=0.9, cex.axis=0.9, cex.main=1.0)
data <- read.table("data", header = TRUE)
head(data)
data.all <- data[1:372,]
data <- data[1:300,]    ## 1970,01 -- 1989,12
n.data <- nrow(data)                  ## number of data
## maturity <- c(1, 3, 6, 9, 12, 15, 18, 21, 24, 30, 36, 48, 60, 72, 84, 96, 108, 120)
maturity <- c(3,6, 9, 12, 15, 18, 21, 24, 30, 36,
48, 60, 72, 84, 96, 108, 120)
n.maturity <- length(maturity)                  ## number of maturity
lambda <- 0.0609   ## As in Diebold-Li(2006)
#######################################
yld <- as.matrix(data[,3:(3+n.maturity - 1)])
n.my <- 3+n.maturity - 1
my <- as.matrix(data[, (n.my+5):(n.my+21)])
head(yld)
head(my)
M <- matrix(, nrow = n.maturity, ncol = 2)
rownames(M) <- c("3m", "6m", "9m", "12m", "15m", "18m", "21m", "24m", "30m", "36m",
"48m", "60m", "72m", "84m", "96m", "108m", "120m")
for (i in 1:n.maturity){
M[i,1] = ( 1 - exp( - lambda * maturity[i]) ) / ( lambda * maturity[i] )
M[i,2] = ( 1 - exp( - lambda * maturity[i]) ) / ( lambda * maturity[i] ) - exp( - lambda * maturity[i])
}
Beta <- matrix(, nrow = n.data, ncol = 2)
colnames(Beta) <- c("beta2", "beta3")
for (i in 1:n.data){
Beta[i,] <- coef( lm(yld[i, 1:n.maturity] ~ M -1) )
}
beta2 <- Beta[,1]
beta3 <- Beta[,2]
summary(Beta)
print(acf(beta2,lag=30))
print(acf(beta3,lag=30))
## ADF
beta2.adf1 <- summary(ur.df(beta2,type="trend",lags=2))
beta2.adf1
beta2.adf2 <- summary(ur.df(diff(beta2),type="drift",lags=1))
beta2.adf2
beta3.adf1 <- summary(ur.df(beta3,type="trend",lags=2))
beta3.adf1
beta3.adf2 <- summary(ur.df(diff(beta3),type="drift",lags=1))
beta3.adf2
## Josen Cointegation
# VARselect(Beta, lag.max=8,type="both")
VARselect(diff(Beta), lag.max=8,type="both")
# stargazer(VARselect(diff(Beta), lag.max=8,type="both"))
BETA <- VAR(Beta, p = 2, type="none")  ## diff, p = 1
summary(BETA)
plot(BETA, equation="beta2")
summary(BETA, equation="beta3")
plot(BETA, equation="beta3")
plot(stability(BETA),nc=2)
arch2 <- arch.test(BETA)
plot(arch2)
BETA.predict <- predict(BETA, n.ahead = 72, ci = 0.95)
plot(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
fanchart(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
plot(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
fanchart(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
beta2.predict <- BETA.predict$fcst$beta2
beta3.predict <- BETA.predict$fcst$beta3
##########################################
print(BETA.predict, name="Beta")
##############################################################################
# 3m
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <= w[1] * my.pred[i,1] + M[1,1] * beta2.predict[i] + M[1,2] * beta3.predict[i]
}
yld.pred.3m
beta2.predict[1]
beta2.predict[1]
M
my.pred[1,1]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <- w[1] * my.pred[i,1] + M[1,1] * beta2.predict[i] + M[1,2] * beta3.predict[i]
}
yld.pred.3m
plot.ts(yld.pred.3m)
head(yld)
summary(yld)
yld.actual.3m <-as.matrix(data.all[,3:(3+n.maturity - 1)])
ydl.actual.3m
yld.actual.3m
head(yld.actual.3m)
yld.actual.3m <-as.matrix(data.all[301:372,3:(3+n.maturity - 1)])
head(yld.actual.3m)
yld.actual.3m <-as.matrix(data.all[301:372,3:(3+n.maturity - 1)])
plot(yld.pred.3m)
line(yld.actual.3m)
plot(yld.pred.3m)
lines(yld.actual.3m)
yld.actual.3m <-as.matrix(data.all[301:372,3:(3+n.maturity - 1)])
plot(maturity,yld.pred.3m)
lines(maturity,yld.actual.3m)
lines(yld.actual.3m)
plot(yld.actual.3m)
maturity
yld.actual.3m <-as.matrix(data.all[301:372,3)
yld.actual.3m <-as.matrix(data.all[301:372,3])
head(yld.actual.3m)
yld.actual.3m <-as.matrix(data.all[301:372,3])
plot(yld.pred.3m)
lines(yld.actual.3m)
plot(yld.actual.3m)
plot(yld.pred.3m)
yld.actual.3m
yld.pred.3m
plot(yld.pred.3m)
lines(yld.actual.3m)
lines(yld.actual.3m)
line(yld.actual.3m)
lines(yld.pred.3m)
lines(yld.actual.3m)
lines(yld.actual.3m)
yld.actual.3m <- data.all[301:372,3]
plot(yld.pred.3m)
lines(yld.actual.3m)
##############################################################################
plot(yld.actual.3m)
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <- w[1] * my.pred[i,1] + M[1,1] * beta2.predict[i] + M[1,2] * beta3.predict[i]
}
yld.actual.3m <- data.all[301:372,3]
plot(yld.pred.3m)
plot(yld.actual.3m)
lines(yld.pred.3m)
plot(yld.pred.3m)
yld.actual.3m <- data.all[301:372,3]
yld.actual.3m
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.predict[i] + M[17,2] * beta3.predict[i]
}
yld.actual.3m <- data.all[301:372,3]
plot(yld.pred.3m)
plot(yld.actual.3m)
w[17]
plot(yld.pred.3m)
yld.actual.3m <- data.all[301:372,20]
plot(yld.actual.3m)
plot(yld.pred.3m)
plot(yld.actual.3m)
plot(yld.actual.3m)
yld.actual.3m <- data.all[301:372,19]
plot(yld.actual.3m)
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.predict[i] + M[17,2] * beta3.predict[i]
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.predict[i] + M[17,2] * beta3.predict[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
BETA <- VAR(diff(Beta), p = 2, type="none")  ## diff, p = 1
summary(BETA)
plot(BETA, equation="beta2")
plot(BETA, equation="beta3")
arch2 <- arch.test(BETA)
plot(arch2)
plot(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
VARselect(diff(Beta), lag.max=8,type="both")
# stargazer(VARselect(diff(Beta), lag.max=8,type="both"))
BETA <- VAR(diff(Beta), p = 2, type="none")  ## diff, p = 1
summary(BETA)
plot(BETA, equation="beta2")
plot(BETA, equation="beta3")
arch2 <- arch.test(BETA)
plot(arch2)
plot(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
fanchart(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
plot(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
fanchart(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
beta2.predict <- BETA.predict$fcst$beta2
beta3.predict <- BETA.predict$fcst$beta3
##########################################
print(BETA.predict, name="Beta")
##############################################################################
# 3m
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.predict[i] + M[17,2] * beta3.predict[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
beta2.predict
beta2.predict$fcst
beta2.predict[1]
beta2.predict[1,1]
beta2.predict[2,1]
beta2
beta3
beta2.predict <- BETA.predict$fcst$beta2
beta2.pred <- matrix(1, nrow = 72, ncol = 1)
for (i in 1:72){
beta2.pred[i] <- cumsum(beta3.predict[i]) + 1.77967415
}
beta2.pred
beta2.predict <- BETA.predict$fcst$beta2
beta2.pred <- matrix(1, nrow = 72, ncol = 1)
for (i in 1:72){
beta2.pred[i] <- cumsum(beta2.predict[i]) + 1.77967415
}
beta2.pred
beta3.predict <- BETA.predict$fcst$beta3
beta3.pred <- matrix(1, nrow = 72, ncol = 1)
for (i in 1:72){
beta3.pred[i] <- cumsum(beta3.predict[i]) + 1.77967415
}
##########################################
beta3.pred
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.pred[i] + M[17,2] * beta3.pred[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
plot(yld.pred.3m)
plot(yld.actual.3m)
VARselect(diff(Beta), lag.max=8,type="both")
# stargazer(VARselect(diff(Beta), lag.max=8,type="both"))
BETA <- VAR(Beta, p = 2, type="none")  ## diff, p = 1
summary(BETA)
plot(BETA, equation="beta2")
plot(BETA, equation="beta3")
arch2 <- arch.test(BETA)
plot(arch2)
plot(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
fanchart(BETA.predict,name="beta2",main="Out-of-sample Predict value: Slope")
plot(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
fanchart(BETA.predict,name="beta3",main="Out-of-sample Predict value: Curvature")
beta2.predict <- BETA.predict$fcst$beta2
#beta2.pred <- matrix(1, nrow = 72, ncol = 1)
#for (i in 1:72){
#  beta2.pred[i] <- cumsum(beta2.predict[i]) + 1.77967415
#}
beta3.predict <- BETA.predict$fcst$beta3
#beta3.pred <- matrix(1, nrow = 72, ncol = 1)
#for (i in 1:72){
#  beta3.pred[i] <- cumsum(beta3.predict[i]) + 1.77967415
#}
##########################################
print(BETA.predict, name="Beta")
##############################################################################
# 3m
my.pred <- data.all[301:372,24:40]
yld.pred.3m <- matrix(, nrow = 72, ncol = 1)
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.pred[i] + M[17,2] * beta3.pred[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
##############################################################################
plot(yld.pred.3m)
yld.actual.3m <- data.all[301:372,20]
plot(yld.actual.3m)
yld.actual.3m <- data.all[301:372,19]
plot(yld.actual.3m)
head(my.pred)
for(i in 1:72){
yld.pred.3m[i,] <- w[17] * my.pred[i,17] + M[17,1] * beta2.pred[i] + M[17,2] * beta3.pred[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
for(i in 1:72){
yld.pred.3m[i,] <- w[12] * my.pred[i,12] + M[12,1] * beta2.pred[i] + M[12,2] * beta3.pred[i]
}
yld.actual.3m <- data.all[301:372,19]
plot(yld.pred.3m)
plot(yld.actual.3m)
